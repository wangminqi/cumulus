(function() {var type_impls = {
"collectives_polkadot_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pay-for-PayOverXcm%3CInterior,+Router,+Querier,+Timeout,+Beneficiary,+AssetKind,+AssetKindToLocatableAsset,+BeneficiaryRefToLocation%3E\" class=\"impl\"><a href=\"#impl-Pay-for-PayOverXcm%3CInterior,+Router,+Querier,+Timeout,+Beneficiary,+AssetKind,+AssetKindToLocatableAsset,+BeneficiaryRefToLocation%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Interior, Router, Querier, Timeout, Beneficiary, AssetKind, AssetKindToLocatableAsset, BeneficiaryRefToLocation&gt; Pay for PayOverXcm&lt;Interior, Router, Querier, Timeout, Beneficiary, AssetKind, AssetKindToLocatableAsset, BeneficiaryRefToLocation&gt;<div class=\"where\">where\n    Interior: Get&lt;Junctions&gt;,\n    Router: SendXcm,\n    Querier: QueryHandler,\n    Timeout: Get&lt;&lt;Querier as QueryHandler&gt;::BlockNumber&gt;,\n    Beneficiary: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    AssetKindToLocatableAsset: Convert&lt;AssetKind, LocatableAssetId&gt;,\n    BeneficiaryRefToLocation: for&lt;'a&gt; Convert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;'a Beneficiary</a>, MultiLocation&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Beneficiary\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Beneficiary\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Beneficiary</a> = Beneficiary</h4></section></summary><div class='docblock'>The type by which we identify the beneficiaries to whom a payment may be made.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AssetKind\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AssetKind\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">AssetKind</a> = AssetKind</h4></section></summary><div class='docblock'>The type for the kinds of asset that are going to be paid. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Balance\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Balance\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Balance</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>The type by which we measure units of the currency in which we make payments.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Id\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Id\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Id</a> = &lt;Querier as QueryHandler&gt;::QueryId</h4></section></summary><div class='docblock'>An identifier given to an individual payment.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>An error which could be returned by the Pay type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pay\" class=\"method trait-impl\"><a href=\"#method.pay\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pay</a>(\n    who: &amp;&lt;PayOverXcm&lt;Interior, Router, Querier, Timeout, Beneficiary, AssetKind, AssetKindToLocatableAsset, BeneficiaryRefToLocation&gt; as Pay&gt;::Beneficiary,\n    asset_kind: &lt;PayOverXcm&lt;Interior, Router, Querier, Timeout, Beneficiary, AssetKind, AssetKindToLocatableAsset, BeneficiaryRefToLocation&gt; as Pay&gt;::AssetKind,\n    amount: &lt;PayOverXcm&lt;Interior, Router, Querier, Timeout, Beneficiary, AssetKind, AssetKindToLocatableAsset, BeneficiaryRefToLocation&gt; as Pay&gt;::Balance\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;PayOverXcm&lt;Interior, Router, Querier, Timeout, Beneficiary, AssetKind, AssetKindToLocatableAsset, BeneficiaryRefToLocation&gt; as Pay&gt;::Id, &lt;PayOverXcm&lt;Interior, Router, Querier, Timeout, Beneficiary, AssetKind, AssetKindToLocatableAsset, BeneficiaryRefToLocation&gt; as Pay&gt;::Error&gt;</h4></section></summary><div class='docblock'>Make a payment and return an identifier for later evaluation of success in some off-chain\nmechanism (likely an event, but possibly not on this chain).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_payment\" class=\"method trait-impl\"><a href=\"#method.check_payment\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">check_payment</a>(\n    id: &lt;PayOverXcm&lt;Interior, Router, Querier, Timeout, Beneficiary, AssetKind, AssetKindToLocatableAsset, BeneficiaryRefToLocation&gt; as Pay&gt;::Id\n) -&gt; PaymentStatus</h4></section></summary><div class='docblock'>Check how a payment has proceeded. <code>id</code> must have been previously returned by <code>pay</code> for\nthe result of this call to be meaningful. Once this returns anything other than\n<code>InProgress</code> for some <code>id</code> it must return <code>Unknown</code> rather than the actual result\nvalue.</div></details></div></details>","Pay","collectives_polkadot_runtime::fellowship::FellowshipSalaryPaymaster"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()