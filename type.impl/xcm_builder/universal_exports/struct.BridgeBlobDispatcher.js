(function() {var type_impls = {
"bridge_hub_rococo_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchBlob-for-BridgeBlobDispatcher%3CRouter,+OurPlace,+OurPlaceBridgeInstance%3E\" class=\"impl\"><a href=\"#impl-DispatchBlob-for-BridgeBlobDispatcher%3CRouter,+OurPlace,+OurPlaceBridgeInstance%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Router, OurPlace, OurPlaceBridgeInstance&gt; DispatchBlob for BridgeBlobDispatcher&lt;Router, OurPlace, OurPlaceBridgeInstance&gt;<div class=\"where\">where\n    Router: SendXcm,\n    OurPlace: Get&lt;Junctions&gt;,\n    OurPlaceBridgeInstance: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Junctions&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.dispatch_blob\" class=\"method trait-impl\"><a href=\"#method.dispatch_blob\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_blob</a>(blob: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchBlobError&gt;</h4></section></summary><div class='docblock'>Takes an incoming blob from over some point-to-point link (usually from some sort of\ninter-consensus bridge) and then does what needs to be done with it. Usually this means\nforwarding it on into some other location sharing our consensus or possibly just enqueuing\nit for execution locally if it is destined for the local chain. <a>Read more</a></div></details></div></details>","DispatchBlob","bridge_hub_rococo_runtime::bridge_hub_rococo_config::OnBridgeHubRococoBlobDispatcher","bridge_hub_rococo_runtime::bridge_hub_wococo_config::OnBridgeHubWococoBlobDispatcher"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()