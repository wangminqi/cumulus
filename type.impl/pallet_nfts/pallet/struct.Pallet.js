(function() {var type_impls = {
"asset_hub_kusama_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Callable&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T, I&gt;</h4></section></div></details>","Callable<T>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Create%3C%3CT+as+Config%3E::AccountId,+CollectionConfig%3C%3C%3CT+as+Config%3CI%3E%3E::Currency+as+Currency%3C%3CT+as+Config%3E::AccountId%3E%3E::Balance,+%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number,+%3CT+as+Config%3CI%3E%3E::CollectionId%3E%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Create%3C%3CT+as+Config%3E::AccountId,+CollectionConfig%3C%3C%3CT+as+Config%3CI%3E%3E::Currency+as+Currency%3C%3CT+as+Config%3E::AccountId%3E%3E::Balance,+%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number,+%3CT+as+Config%3CI%3E%3E::CollectionId%3E%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Create&lt;&lt;T as Config&gt;::AccountId, CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_collection\" class=\"method trait-impl\"><a href=\"#method.create_collection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_collection</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    admin: &amp;&lt;T as Config&gt;::AccountId,\n    config: &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>collection</code> of nonfungible items to be owned by <code>who</code> and managed by <code>admin</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_collection_with_id\" class=\"method trait-impl\"><a href=\"#method.create_collection_with_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_collection_with_id</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    admin: &amp;&lt;T as Config&gt;::AccountId,\n    config: &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a collection of nonfungible items with <code>collection</code> Id to be owned by <code>who</code> and\nmanaged by <code>admin</code>. Should be only used for applications that do not have an\nincremental order for the collection IDs and is a replacement for the auto id creation.</p>\n<p>SAFETY: This function can break the pallet if it is used in combination with the auto\nincrement functionality, as it can claim a value in the ID sequence.</p>\n</div></details></div></details>","Create<<T as Config>::AccountId, CollectionConfig<<<T as Config<I>>::Currency as Currency<<T as Config>::AccountId>>::Balance, <<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config<I>>::CollectionId>>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Destroy%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Destroy%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Destroy&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.DestroyWitness\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.DestroyWitness\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">DestroyWitness</a> = DestroyWitness</h4></section></summary><div class='docblock'>The witness data needed to destroy an item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_destroy_witness\" class=\"method trait-impl\"><a href=\"#method.get_destroy_witness\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_destroy_witness</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;DestroyWitness&gt;</h4></section></summary><div class='docblock'>Provide the appropriate witness data needed to destroy an item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy\" class=\"method trait-impl\"><a href=\"#method.destroy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">destroy</a>(\n    collection: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    witness: &lt;Pallet&lt;T, I&gt; as Destroy&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::DestroyWitness,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T, I&gt; as Destroy&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::DestroyWitness, DispatchError&gt;</h4></section></summary><div class='docblock'>Destroy an existing fungible item. <a>Read more</a></div></details></div></details>","Destroy<<T as Config>::AccountId>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; GetStorageVersion for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T, I&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inspect%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Inspect%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Inspect&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.attribute\" class=\"method trait-impl\"><a href=\"#method.attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>When <code>key</code> is empty, we return the item metadata value.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.custom_attribute\" class=\"method trait-impl\"><a href=\"#method.custom_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">custom_attribute</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the custom attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_attribute\" class=\"method trait-impl\"><a href=\"#method.system_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">system_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the system attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_attribute\" class=\"method trait-impl\"><a href=\"#method.collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>When <code>key</code> is empty, we return the item metadata value.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_transfer\" class=\"method trait-impl\"><a href=\"#method.can_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">can_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.</p>\n<p>Default implementation is that all items are transferable.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ItemId</a> = &lt;T as Config&lt;I&gt;&gt;::ItemId</h4></section></summary><div class='docblock'>Type for identifying an item.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CollectionId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CollectionId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CollectionId</a> = &lt;T as Config&lt;I&gt;&gt;::CollectionId</h4></section></summary><div class='docblock'>Type for identifying a collection (an identifier for an independent collection of\nitems).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owner\" class=\"method trait-impl\"><a href=\"#method.owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owner</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>Returns the owner of <code>item</code> of <code>collection</code>, or <code>None</code> if the item doesn’t exist\n(or somehow has no owner).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_owner\" class=\"method trait-impl\"><a href=\"#method.collection_owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collection_owner</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>Returns the owner of the <code>collection</code>, if there is one. For many NFTs this may not\nmake any sense, so users of this API should not be surprised to find a collection\nresults in <code>None</code> here.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_custom_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_custom_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_custom_attribute</a>&lt;K, V&gt;(\n    account: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed custom attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_system_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_system_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_system_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed system attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_collection_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed attribute value of <code>collection</code> corresponding to <code>key</code>. <a>Read more</a></div></details></div></details>","Inspect<<T as Config>::AccountId>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InspectEnumerable%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-InspectEnumerable%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.collections\" class=\"method trait-impl\"><a href=\"#method.collections\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collections</a>(\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionsIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the collections in existence.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.items\" class=\"method trait-impl\"><a href=\"#method.items\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">items</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemsIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of a <code>collection</code> in existence.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned\" class=\"method trait-impl\"><a href=\"#method.owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owned</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::OwnedIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of all collections owned by <code>who</code>.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned_in_collection\" class=\"method trait-impl\"><a href=\"#method.owned_in_collection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owned_in_collection</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::OwnedInCollectionIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of <code>collection</code> owned by <code>who</code>.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CollectionsIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CollectionsIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CollectionsIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::collections</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemsIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemsIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ItemsIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::items</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnedIterator</a> = KeyPrefixIterator&lt;(&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId)&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::owned</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedInCollectionIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedInCollectionIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnedInCollectionIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::owned_in_collection</code>].</div></details></div></details>","InspectEnumerable<<T as Config>::AccountId>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InspectRole%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-InspectRole%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; InspectRole&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_issuer\" class=\"method trait-impl\"><a href=\"#method.is_issuer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_issuer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the issuer of the <code>collection</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_admin\" class=\"method trait-impl\"><a href=\"#method.is_admin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_admin</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the admin of the <code>collection</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_freezer\" class=\"method trait-impl\"><a href=\"#method.is_freezer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_freezer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the freezer of the <code>collection</code>.</div></details></div></details>","InspectRole<<T as Config>::AccountId>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; IntegrityTest for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutate%3C%3CT+as+Config%3E::AccountId,+ItemConfig%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Mutate%3C%3CT+as+Config%3E::AccountId,+ItemConfig%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Mutate&lt;&lt;T as Config&gt;::AccountId, ItemConfig&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint_into\" class=\"method trait-impl\"><a href=\"#method.mint_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mint_into</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    item_config: &amp;ItemConfig,\n    deposit_collection_owner: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Mint some <code>item</code> of <code>collection</code> to be owned by <code>who</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method trait-impl\"><a href=\"#method.burn\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">burn</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Burn some <code>item</code> of <code>collection</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attribute\" class=\"method trait-impl\"><a href=\"#method.set_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>],\n    value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Set attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_typed_attribute\" class=\"method trait-impl\"><a href=\"#method.set_typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_typed_attribute</a>&lt;K, V&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,\n    V: Encode,</div></h4></section></summary><div class='docblock'>Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.set_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>],\n    value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Set attribute <code>value</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.set_typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_typed_collection_attribute</a>&lt;K, V&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,\n    V: Encode,</div></h4></section></summary><div class='docblock'>Attempt to set the strongly-typed attribute <code>value</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Clear attribute of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_typed_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_typed_attribute</a>&lt;K&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,</div></h4></section></summary><div class='docblock'>Attempt to clear the strongly-typed attribute of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Clear attribute of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_typed_collection_attribute</a>&lt;K&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,</div></h4></section></summary><div class='docblock'>Attempt to clear the strongly-typed attribute of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details></div></details>","Mutate<<T as Config>::AccountId, ItemConfig>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnGenesis for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnRuntimeUpgrade for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_attribute_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_attribute_key</a>(\n    key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct an attribute’s key.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided attribute <code>key</code> is too long.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_attribute_value\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_attribute_value</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct an attribute’s value.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided <code>value</code> is too long.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_system_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">has_system_attribute</a>(\n    collection: &amp;&lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &amp;&lt;T as Config&lt;I&gt;&gt;::ItemId,\n    attribute_key: PalletAttributes&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to check whether a system attribute is set for a given item.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided pallet attribute is too long.</p>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_metadata</a>(\n    metadata: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct metadata.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectMetadata\"><code>IncorrectMetadata</code></a> dispatch\nerror if the provided metadata is too long.</p>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    admin: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Issue a new collection of non-fungible items from a public origin.</p>\n<p>This new collection has no items initially and its owner is the origin.</p>\n<p>The origin must be Signed and the sender must have sufficient funds free.</p>\n<p><code>CollectionDeposit</code> funds of sender are reserved.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>admin</code>: The admin of this collection. The admin is the initial address of each\nmember of the collection’s admin team.</li>\n</ul>\n<p>Emits <code>Created</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_create</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Issue a new collection of non-fungible items from a privileged origin.</p>\n<p>This new collection has no items initially.</p>\n<p>The origin must conform to <code>ForceOrigin</code>.</p>\n<p>Unlike <code>create</code>, no funds are reserved.</p>\n<ul>\n<li><code>owner</code>: The owner of this collection of items. The owner has full superuser\npermissions over this item, but may later change and configure the permissions using\n<code>transfer_ownership</code> and <code>set_team</code>.</li>\n</ul>\n<p>Emits <code>ForceCreated</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">destroy</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    witness: DestroyWitness\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy a collection of fungible items.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be <code>Signed</code> and the sender must be the\nowner of the <code>collection</code>.</p>\n<p>NOTE: The collection must have 0 items to be destroyed.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to be destroyed.</li>\n<li><code>witness</code>: Information on the items minted in the collection. This must be\ncorrect.</li>\n</ul>\n<p>Emits <code>Destroyed</code> event when successful.</p>\n<p>Weight: <code>O(m + c + a)</code> where:</p>\n<ul>\n<li><code>m = witness.item_metadatas</code></li>\n<li><code>c = witness.item_configs</code></li>\n<li><code>a = witness.attributes</code></li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mint</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    mint_to: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    witness_data: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;MintWitness&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item of a particular collection.</p>\n<p>The origin must be Signed and the sender must comply with the <code>mint_settings</code> rules.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be minted.</li>\n<li><code>item</code>: An identifier of the new item.</li>\n<li><code>mint_to</code>: Account into which the item will be minted.</li>\n<li><code>witness_data</code>: When the mint type is <code>HolderOf(collection_id)</code>, then the owned\nitem_id from that collection needs to be provided within the witness data object. If\nthe mint price is set, then it should be additionally confirmed in the <code>witness_data</code>.</li>\n</ul>\n<p>Note: the deposit will be taken from the <code>origin</code> and not the <code>owner</code> of the <code>item</code>.</p>\n<p>Emits <code>Issued</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_mint</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    mint_to: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    item_config: ItemConfig\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item of a particular collection from a privileged origin.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be <code>Signed</code> and the sender must be the\nIssuer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be minted.</li>\n<li><code>item</code>: An identifier of the new item.</li>\n<li><code>mint_to</code>: Account into which the item will be minted.</li>\n<li><code>item_config</code>: A config of the new item.</li>\n</ul>\n<p>Emits <code>Issued</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">burn</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy a single item.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be Signed and the signing account must\nbe the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be burned.</li>\n<li><code>item</code>: The item to be burned.</li>\n</ul>\n<p>Emits <code>Burned</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    dest: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Move an item from the sender account to another.</p>\n<p>Origin must be Signed and the signing account must be either:</p>\n<ul>\n<li>the Owner of the <code>item</code>;</li>\n<li>the approved delegate for the <code>item</code> (in this case, the approval is reset).</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be transferred.</li>\n<li><code>item</code>: The item to be transferred.</li>\n<li><code>dest</code>: The account to receive ownership of the item.</li>\n</ul>\n<p>Emits <code>Transferred</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.redeposit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">redeposit</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    items: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Re-evaluate the deposits on some items.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the items to be reevaluated.</li>\n<li><code>items</code>: The items of the collection whose deposits will be reevaluated.</li>\n</ul>\n<p>NOTE: This exists as a best-effort function. Any items which are unknown or\nin the case that the owner account does not have reservable funds to pay for a\ndeposit increase are ignored. Generally the owner isn’t going to call this on items\nwhose existing deposit is less than the refreshed deposit as it would only cost them,\nso it’s of little consequence.</p>\n<p>It will still return an error in the case that the collection is unknown or the signer\nis not permitted to call it.</p>\n<p>Weight: <code>O(items.len())</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_item_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_item_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallow further unprivileged transfer of an item.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be changed.</li>\n<li><code>item</code>: The item to become non-transferable.</li>\n</ul>\n<p>Emits <code>ItemTransferLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock_item_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unlock_item_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Re-allow unprivileged transfer of an item.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be changed.</li>\n<li><code>item</code>: The item to become transferable.</li>\n</ul>\n<p>Emits <code>ItemTransferUnlocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_collection</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    lock_settings: CollectionSettings\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallows specified settings for the whole collection.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection to be locked.</li>\n<li><code>lock_settings</code>: The settings to be locked.</li>\n</ul>\n<p>Note: it’s possible to only lock(set) the setting, but not to unset it.</p>\n<p>Emits <code>CollectionLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_ownership\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer_ownership</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Owner of a collection.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection whose owner should be changed.</li>\n<li><code>owner</code>: The new Owner of this collection. They must have called\n<code>set_accept_ownership</code> with <code>collection</code> in order for this operation to succeed.</li>\n</ul>\n<p>Emits <code>OwnerChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_team\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_team</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    issuer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;,\n    admin: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;,\n    freezer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Issuer, Admin and Freezer of a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\n<code>collection</code>.</p>\n<p>Note: by setting the role to <code>None</code> only the <code>ForceOrigin</code> will be able to change it\nafter to <code>Some(account)</code>.</p>\n<ul>\n<li><code>collection</code>: The collection whose team should be changed.</li>\n<li><code>issuer</code>: The new Issuer of this collection.</li>\n<li><code>admin</code>: The new Admin of this collection.</li>\n<li><code>freezer</code>: The new Freezer of this collection.</li>\n</ul>\n<p>Emits <code>TeamChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_collection_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_collection_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Owner of a collection.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection.</li>\n<li><code>owner</code>: The new Owner of this collection.</li>\n</ul>\n<p>Emits <code>OwnerChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_collection_config\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_collection_config</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the config of a collection.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection.</li>\n<li><code>config</code>: The new config of this collection.</li>\n</ul>\n<p>Emits <code>CollectionConfigChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approve_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">approve_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    maybe_deadline: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Approve an item to be transferred by a delegated third-party account.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\n<code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be approved for delegated transfer.</li>\n<li><code>item</code>: The item to be approved for delegated transfer.</li>\n<li><code>delegate</code>: The account to delegate permission to transfer the item.</li>\n<li><code>maybe_deadline</code>: Optional deadline for the approval. Specified by providing the\nnumber of blocks after which the approval will expire</li>\n</ul>\n<p>Emits <code>TransferApproved</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_approval\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_approval</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel one of the transfer approvals for a specific item.</p>\n<p>Origin must be either:</p>\n<ul>\n<li>the <code>Force</code> origin;</li>\n<li><code>Signed</code> with the signer being the Owner of the <code>item</code>;</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item of whose approval will be cancelled.</li>\n<li><code>item</code>: The item of the collection of whose approval will be cancelled.</li>\n<li><code>delegate</code>: The account that is going to loose their approval.</li>\n</ul>\n<p>Emits <code>ApprovalCancelled</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_all_transfer_approvals\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_all_transfer_approvals</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel all the approvals of a specific item.</p>\n<p>Origin must be either:</p>\n<ul>\n<li>the <code>Force</code> origin;</li>\n<li><code>Signed</code> with the signer being the Owner of the <code>item</code>;</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item of whose approvals will be cleared.</li>\n<li><code>item</code>: The item of the collection of whose approvals will be cleared.</li>\n</ul>\n<p>Emits <code>AllApprovalsCancelled</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_item_properties\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_item_properties</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    lock_metadata: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>,\n    lock_attributes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallows changing the metadata or attributes of the item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin\nof the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection if the <code>item</code>.</li>\n<li><code>item</code>: An item to be locked.</li>\n<li><code>lock_metadata</code>: Specifies whether the metadata should be locked.</li>\n<li><code>lock_attributes</code>: Specifies whether the attributes in the <code>CollectionOwner</code> namespace\nshould be locked.</li>\n</ul>\n<p>Note: <code>lock_attributes</code> affects the attributes in the <code>CollectionOwner</code> namespace only.\nWhen the metadata or attributes are locked, it won’t be possible the unlock them.</p>\n<p>Emits <code>ItemPropertiesLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;,\n    value: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set an attribute for a collection or item.</p>\n<p>Origin must be Signed and must conform to the namespace ruleset:</p>\n<ul>\n<li><code>CollectionOwner</code> namespace could be modified by the <code>collection</code> Admin only;</li>\n<li><code>ItemOwner</code> namespace could be modified by the <code>maybe_item</code> owner only. <code>maybe_item</code>\nshould be set in that case;</li>\n<li><code>Account(AccountId)</code> namespace could be modified only when the <code>origin</code> was given a\npermission to do so;</li>\n</ul>\n<p>The funds of <code>origin</code> are reserved according to the formula:\n<code>AttributeDepositBase + DepositPerByte * (key.len + value.len)</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n<li><code>value</code>: The value to which to set the attribute.</li>\n</ul>\n<p>Emits <code>AttributeSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_set_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_set_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    set_as: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;,\n    value: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Force-set an attribute for a collection or item.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<p>If the attribute already exists and it was set by another account, the deposit\nwill be returned to the previous owner.</p>\n<ul>\n<li><code>set_as</code>: An optional owner of the attribute.</li>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n<li><code>value</code>: The value to which to set the attribute.</li>\n</ul>\n<p>Emits <code>AttributeSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear an attribute for a collection or item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\nattribute.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to clear.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to clear.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n</ul>\n<p>Emits <code>AttributeCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approve_item_attributes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">approve_item_attributes</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Approve item’s attributes to be changed by a delegated third-party account.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: A collection of the item.</li>\n<li><code>item</code>: The item that holds attributes.</li>\n<li><code>delegate</code>: The account to delegate permission to change attributes of the item.</li>\n</ul>\n<p>Emits <code>ItemAttributesApprovalAdded</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_item_attributes_approval\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_item_attributes_approval</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    witness: CancelAttributesApprovalWitness\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel the previously provided approval to change item’s attributes.\nAll the previously set attributes by the <code>delegate</code> will be removed.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: Collection that the item is contained within.</li>\n<li><code>item</code>: The item that holds attributes.</li>\n<li><code>delegate</code>: The previously approved account to remove.</li>\n</ul>\n<p>Emits <code>ItemAttributesApprovalRemoved</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    data: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the metadata for an item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin of the\n<code>collection</code>.</p>\n<p>If the origin is Signed, then funds of signer are reserved according to the formula:\n<code>MetadataDepositBase + DepositPerByte * data.len</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>data</code>: The general information of this item. Limited in length by <code>StringLimit</code>.</li>\n</ul>\n<p>Emits <code>ItemMetadataSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the metadata for an item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin of the\n<code>collection</code>.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to clear.</li>\n<li><code>item</code>: The identifier of the item whose metadata to clear.</li>\n</ul>\n<p>Emits <code>ItemMetadataCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_collection_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    data: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the metadata for a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Admin of\nthe <code>collection</code>.</p>\n<p>If the origin is <code>Signed</code>, then funds of signer are reserved according to the formula:\n<code>MetadataDepositBase + DepositPerByte * data.len</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the item whose metadata to update.</li>\n<li><code>data</code>: The general information of this item. Limited in length by <code>StringLimit</code>.</li>\n</ul>\n<p>Emits <code>CollectionMetadataSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_collection_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_collection_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the metadata for a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Admin of\nthe <code>collection</code>.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose metadata to clear.</li>\n</ul>\n<p>Emits <code>CollectionMetadataCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_accept_ownership\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_accept_ownership</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_collection: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set (or reset) the acceptance of ownership for a particular account.</p>\n<p>Origin must be <code>Signed</code> and if <code>maybe_collection</code> is <code>Some</code>, then the signer must have a\nprovider reference.</p>\n<ul>\n<li><code>maybe_collection</code>: The identifier of the collection whose ownership the signer is\nwilling to accept, or if <code>None</code>, an indication that the signer is willing to accept no\nownership transferal.</li>\n</ul>\n<p>Emits <code>OwnershipAcceptanceChanged</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_max_supply\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_collection_max_supply</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    max_supply: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the maximum number of items a collection could have.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Owner of\nthe <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to change.</li>\n<li><code>max_supply</code>: The maximum number of items a collection could have.</li>\n</ul>\n<p>Emits <code>CollectionMaxSupplySet</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_mint_settings\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">update_mint_settings</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    mint_settings: MintSettings&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Update mint settings.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Issuer\nof the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to change.</li>\n<li><code>mint_settings</code>: The new mint settings.</li>\n</ul>\n<p>Emits <code>CollectionMintSettingsUpdated</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_price\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_price</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;,\n    whitelisted_buyer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set (or reset) the price for an item.</p>\n<p>Origin must be Signed and must be the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item to set the price for.</li>\n<li><code>price</code>: The price for the item. Pass <code>None</code>, to reset the price.</li>\n<li><code>buyer</code>: Restricts the buy operation to a specific account.</li>\n</ul>\n<p>Emits <code>ItemPriceSet</code> on success if the price is not <code>None</code>.\nEmits <code>ItemPriceRemoved</code> on success if the price is <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.buy_item\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">buy_item</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    bid_price: &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Allows to buy an item if it’s up for sale.</p>\n<p>Origin must be Signed and must not be the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item the sender wants to buy.</li>\n<li><code>bid_price</code>: The price the sender is willing to pay.</li>\n</ul>\n<p>Emits <code>ItemBought</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pay_tips\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pay_tips</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    tips: BoundedVec&lt;ItemTip&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &lt;T as Config&lt;I&gt;&gt;::MaxTips&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Allows to pay the tips.</p>\n<p>Origin must be Signed.</p>\n<ul>\n<li><code>tips</code>: Tips array.</li>\n</ul>\n<p>Emits <code>TipSent</code> on every tip transfer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    offered_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    offered_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    desired_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_desired_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    maybe_price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PriceWithDirection&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;,\n    duration: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Register a new atomic swap, declaring an intention to send an <code>item</code> in exchange for\n<code>desired_item</code> from origin to target on the current blockchain.\nThe target can execute the swap during the specified <code>duration</code> of blocks (if set).\nAdditionally, the price could be set for the desired <code>item</code>.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item an owner wants to give.</li>\n<li><code>desired_collection</code>: The collection of the desired item.</li>\n<li><code>desired_item</code>: The desired item an owner wants to receive.</li>\n<li><code>maybe_price</code>: The price an owner is willing to pay or receive for the desired <code>item</code>.</li>\n<li><code>duration</code>: A deadline for the swap. Specified by providing the number of blocks\nafter which the swap will expire.</li>\n</ul>\n<p>Emits <code>SwapCreated</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    offered_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    offered_item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel an atomic swap.</p>\n<p>Origin must be Signed.\nOrigin must be an owner of the <code>item</code> if the deadline hasn’t expired.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item an owner wants to give.</li>\n</ul>\n<p>Emits <code>SwapCancelled</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">claim_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    send_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    send_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    receive_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    receive_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    witness_price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PriceWithDirection&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Claim an atomic swap.\nThis method executes a pending swap, that was created by a counterpart before.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>send_collection</code>: The collection of the item to be sent.</li>\n<li><code>send_item</code>: The item to be sent.</li>\n<li><code>receive_collection</code>: The collection of the item to be received.</li>\n<li><code>receive_item</code>: The item to be received.</li>\n<li><code>witness_price</code>: A price that was previously agreed on.</li>\n</ul>\n<p>Emits <code>SwapClaimed</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint_pre_signed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mint_pre_signed</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    mint_data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;PreSignedMint&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;,\n    signature: &lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item by providing the pre-signed approval.</p>\n<p>Origin must be Signed.</p>\n<ul>\n<li><code>mint_data</code>: The pre-signed approval that consists of the information about the item,\nits metadata, attributes, who can mint it (<code>None</code> for anyone) and until what block\nnumber.</li>\n<li><code>signature</code>: The signature of the <code>data</code> object.</li>\n<li><code>signer</code>: The <code>data</code> object’s signer. Should be an Issuer of the collection.</li>\n</ul>\n<p>Emits <code>Issued</code> on success.\nEmits <code>AttributeSet</code> if the attributes were provided.\nEmits <code>ItemMetadataSet</code> if the metadata was not empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attributes_pre_signed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_attributes_pre_signed</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    data: PreSignedAttributes&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    signature: &lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set attributes for an item by providing the pre-signed approval.</p>\n<p>Origin must be Signed and must be an owner of the <code>data.item</code>.</p>\n<ul>\n<li><code>data</code>: The pre-signed approval that consists of the information about the item,\nattributes to update and until what block number.</li>\n<li><code>signature</code>: The signature of the <code>data</code> object.</li>\n<li><code>signer</code>: The <code>data</code> object’s signer. Should be an Admin of the collection for the\n<code>CollectionOwner</code> namespace.</li>\n</ul>\n<p>Emits <code>AttributeSet</code> for each provided attribute.\nEmits <code>ItemAttributesApprovalAdded</code> if the approval wasn’t set before.\nEmits <code>PreSignedAttributesSet</code> on success.</p>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_create_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_create_collection</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;T as Config&gt;::AccountId,\n    admin: &lt;T as Config&gt;::AccountId,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;,\n    deposit: &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    event: Event&lt;T, I&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new collection with the given <code>collection</code>, <code>owner</code>, <code>admin</code>, <code>config</code>, <code>deposit</code>,\nand <code>event</code>.</p>\n<p>This function creates a new collection with the provided parameters. It reserves the\nrequired deposit from the owner’s account, sets the collection details, assigns admin roles,\nand inserts the provided configuration. Finally, it emits the specified event upon success.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a <a href=\"crate::Error::CollectionIdInUse\"><code>CollectionIdInUse</code></a> error if the\ncollection ID is already in use.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_destroy_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_destroy_collection</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    witness: DestroyWitness,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DestroyWitness, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy the specified collection with the given <code>collection</code>, <code>witness</code>, and\n<code>maybe_check_owner</code>.</p>\n<p>This function destroys the specified collection if it exists and meets the necessary\nconditions. It checks the provided <code>witness</code> against the actual collection details and\nremoves the collection along with its associated metadata, attributes, and configurations.\nThe necessary deposits are returned to the corresponding accounts, and the roles and\nconfigurations for the collection are cleared. Finally, it emits the <code>Destroyed</code> event upon\nsuccessful destruction.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is not found\n(<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the provided <code>maybe_check_owner</code> does not match the actual owner\n(<a href=\"crate::Error::NoPermission\"><code>NoPermission</code></a>).</li>\n<li>If the collection is not empty (contains items)\n(<a href=\"crate::Error::CollectionNotEmpty\"><code>CollectionNotEmpty</code></a>).</li>\n<li>If the <code>witness</code> does not match the actual collection details\n(<a href=\"crate::Error::BadWitness\"><code>BadWitness</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_mint</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    maybe_depositor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n    mint_to: &lt;T as Config&gt;::AccountId,\n    item_config: ItemConfig,\n    with_details_and_config: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;CollectionDetails&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint a new unique item with the given <code>collection</code>, <code>item</code>, and other minting configuration\ndetails.</p>\n<p>This function performs the minting of a new unique item. It checks if the item does not\nalready exist in the given collection, and if the max supply limit (if configured) is not\nreached. It also reserves the required deposit for the item and sets the item details\naccordingly.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item already exists in the collection\n(<a href=\"crate::Error::AlreadyExists\"><code>AlreadyExists</code></a>).</li>\n<li>If the item configuration already exists\n(<a href=\"crate::Error::InconsistentItemConfig\"><code>InconsistentItemConfig</code></a>).</li>\n<li>If the max supply limit (if configured) for the collection is reached\n(<a href=\"crate::Error::MaxSupplyReached\"><code>MaxSupplyReached</code></a>).</li>\n<li>If any error occurs in the <code>with_details_and_config</code> closure.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_burn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_burn</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    with_details: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;ItemDetails&lt;&lt;T as Config&gt;::AccountId, ItemDeposit&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;T as Config&gt;::AccountId&gt;, BoundedBTreeMap&lt;&lt;T as Config&gt;::AccountId, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;, &lt;T as Config&lt;I&gt;&gt;::ApprovalsLimit&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Burns the specified item with the given <code>collection</code>, <code>item</code>, and <code>with_details</code>.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item is locked (<a href=\"crate::Error::ItemLocked\"><code>ItemLocked</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_transfer</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    dest: &lt;T as Config&gt;::AccountId,\n    with_details: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;CollectionDetails&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &amp;mut ItemDetails&lt;&lt;T as Config&gt;::AccountId, ItemDeposit&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;T as Config&gt;::AccountId&gt;, BoundedBTreeMap&lt;&lt;T as Config&gt;::AccountId, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;, &lt;T as Config&lt;I&gt;&gt;::ApprovalsLimit&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer an NFT to the specified destination account.</p>\n<ul>\n<li><code>collection</code>: The ID of the collection to which the NFT belongs.</li>\n<li><code>item</code>: The ID of the NFT to transfer.</li>\n<li><code>dest</code>: The destination account to which the NFT will be transferred.</li>\n<li><code>with_details</code>: A closure that provides access to the collection and item details,\nallowing customization of the transfer process.</li>\n</ul>\n<p>This function performs the actual transfer of an NFT to the destination account.\nIt checks various conditions like item lock status and transferability settings\nfor the collection and item before transferring the NFT.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item ID is invalid (<a href=\"crate::Error::UnknownItem\"><code>UnknownItem</code></a>).</li>\n<li>If the item is locked or transferring it is disabled\n(<a href=\"crate::Error::ItemLocked\"><code>ItemLocked</code></a>).</li>\n<li>If the collection or item is non-transferable\n(<a href=\"crate::Error::ItemsNonTransferable\"><code>ItemsNonTransferable</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.group_roles_by_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">group_roles_by_account</a>(\n    input: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;T as Config&gt;::AccountId, CollectionRole)&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;T as Config&gt;::AccountId, CollectionRoles)&gt;</h4></section></summary><div class=\"docblock\"><p>Groups provided roles by account, given one account could have multiple roles.</p>\n<ul>\n<li><code>input</code>: A vector of (Account, Role) tuples.</li>\n</ul>\n<p>Returns a grouped vector of <code>(Account, Roles)</code> tuples.</p>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">owner</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class=\"docblock\"><p>Get the owner of the item, if the item exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">collection_owner</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class=\"docblock\"><p>Get the owner of the collection, if the collection exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_signature\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">validate_signature</a>(\n    data: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;,\n    signature: &amp;&lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Validates the signature of the given data with the provided signer’s account ID.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a <a href=\"crate::Error::WrongSignature\"><code>WrongSignature</code></a> error if the\nsignature is invalid or the verification process fails.</p>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletsInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T, I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StorageInfoTrait for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transfer%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Transfer%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Transfer&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    destination: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Transfer <code>item</code> of <code>collection</code> into <code>destination</code> account.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.disable_transfer\" class=\"method trait-impl\"><a href=\"#method.disable_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">disable_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Disable the <code>item</code> of <code>collection</code> transfer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enable_transfer\" class=\"method trait-impl\"><a href=\"#method.enable_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enable_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Re-enable the <code>item</code> of <code>collection</code> transfer. <a>Read more</a></div></details></div></details>","Transfer<<T as Config>::AccountId>","asset_hub_kusama_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; WhitelistedStorageKeys for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","asset_hub_kusama_runtime::Nfts"],["<section id=\"impl-Eq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T, I&gt;</h3></section>","Eq","asset_hub_kusama_runtime::Nfts"]],
"asset_hub_polkadot_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Callable&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T, I&gt;</h4></section></div></details>","Callable<T>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Create%3C%3CT+as+Config%3E::AccountId,+CollectionConfig%3C%3C%3CT+as+Config%3CI%3E%3E::Currency+as+Currency%3C%3CT+as+Config%3E::AccountId%3E%3E::Balance,+%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number,+%3CT+as+Config%3CI%3E%3E::CollectionId%3E%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Create%3C%3CT+as+Config%3E::AccountId,+CollectionConfig%3C%3C%3CT+as+Config%3CI%3E%3E::Currency+as+Currency%3C%3CT+as+Config%3E::AccountId%3E%3E::Balance,+%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number,+%3CT+as+Config%3CI%3E%3E::CollectionId%3E%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Create&lt;&lt;T as Config&gt;::AccountId, CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_collection\" class=\"method trait-impl\"><a href=\"#method.create_collection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_collection</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    admin: &amp;&lt;T as Config&gt;::AccountId,\n    config: &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>collection</code> of nonfungible items to be owned by <code>who</code> and managed by <code>admin</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_collection_with_id\" class=\"method trait-impl\"><a href=\"#method.create_collection_with_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_collection_with_id</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    admin: &amp;&lt;T as Config&gt;::AccountId,\n    config: &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a collection of nonfungible items with <code>collection</code> Id to be owned by <code>who</code> and\nmanaged by <code>admin</code>. Should be only used for applications that do not have an\nincremental order for the collection IDs and is a replacement for the auto id creation.</p>\n<p>SAFETY: This function can break the pallet if it is used in combination with the auto\nincrement functionality, as it can claim a value in the ID sequence.</p>\n</div></details></div></details>","Create<<T as Config>::AccountId, CollectionConfig<<<T as Config<I>>::Currency as Currency<<T as Config>::AccountId>>::Balance, <<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config<I>>::CollectionId>>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Destroy%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Destroy%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Destroy&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.DestroyWitness\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.DestroyWitness\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">DestroyWitness</a> = DestroyWitness</h4></section></summary><div class='docblock'>The witness data needed to destroy an item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_destroy_witness\" class=\"method trait-impl\"><a href=\"#method.get_destroy_witness\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_destroy_witness</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;DestroyWitness&gt;</h4></section></summary><div class='docblock'>Provide the appropriate witness data needed to destroy an item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy\" class=\"method trait-impl\"><a href=\"#method.destroy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">destroy</a>(\n    collection: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    witness: &lt;Pallet&lt;T, I&gt; as Destroy&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::DestroyWitness,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T, I&gt; as Destroy&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::DestroyWitness, DispatchError&gt;</h4></section></summary><div class='docblock'>Destroy an existing fungible item. <a>Read more</a></div></details></div></details>","Destroy<<T as Config>::AccountId>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; GetStorageVersion for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T, I&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inspect%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Inspect%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Inspect&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.attribute\" class=\"method trait-impl\"><a href=\"#method.attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>When <code>key</code> is empty, we return the item metadata value.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.custom_attribute\" class=\"method trait-impl\"><a href=\"#method.custom_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">custom_attribute</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the custom attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_attribute\" class=\"method trait-impl\"><a href=\"#method.system_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">system_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the system attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_attribute\" class=\"method trait-impl\"><a href=\"#method.collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>When <code>key</code> is empty, we return the item metadata value.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_transfer\" class=\"method trait-impl\"><a href=\"#method.can_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">can_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.</p>\n<p>Default implementation is that all items are transferable.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ItemId</a> = &lt;T as Config&lt;I&gt;&gt;::ItemId</h4></section></summary><div class='docblock'>Type for identifying an item.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CollectionId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CollectionId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CollectionId</a> = &lt;T as Config&lt;I&gt;&gt;::CollectionId</h4></section></summary><div class='docblock'>Type for identifying a collection (an identifier for an independent collection of\nitems).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owner\" class=\"method trait-impl\"><a href=\"#method.owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owner</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>Returns the owner of <code>item</code> of <code>collection</code>, or <code>None</code> if the item doesn’t exist\n(or somehow has no owner).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_owner\" class=\"method trait-impl\"><a href=\"#method.collection_owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collection_owner</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>Returns the owner of the <code>collection</code>, if there is one. For many NFTs this may not\nmake any sense, so users of this API should not be surprised to find a collection\nresults in <code>None</code> here.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_custom_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_custom_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_custom_attribute</a>&lt;K, V&gt;(\n    account: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed custom attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_system_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_system_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_system_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed system attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_collection_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed attribute value of <code>collection</code> corresponding to <code>key</code>. <a>Read more</a></div></details></div></details>","Inspect<<T as Config>::AccountId>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InspectEnumerable%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-InspectEnumerable%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.collections\" class=\"method trait-impl\"><a href=\"#method.collections\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collections</a>(\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionsIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the collections in existence.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.items\" class=\"method trait-impl\"><a href=\"#method.items\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">items</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemsIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of a <code>collection</code> in existence.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned\" class=\"method trait-impl\"><a href=\"#method.owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owned</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::OwnedIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of all collections owned by <code>who</code>.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned_in_collection\" class=\"method trait-impl\"><a href=\"#method.owned_in_collection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owned_in_collection</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::OwnedInCollectionIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of <code>collection</code> owned by <code>who</code>.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CollectionsIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CollectionsIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CollectionsIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::collections</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemsIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemsIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ItemsIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::items</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnedIterator</a> = KeyPrefixIterator&lt;(&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId)&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::owned</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedInCollectionIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedInCollectionIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnedInCollectionIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::owned_in_collection</code>].</div></details></div></details>","InspectEnumerable<<T as Config>::AccountId>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InspectRole%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-InspectRole%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; InspectRole&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_issuer\" class=\"method trait-impl\"><a href=\"#method.is_issuer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_issuer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the issuer of the <code>collection</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_admin\" class=\"method trait-impl\"><a href=\"#method.is_admin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_admin</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the admin of the <code>collection</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_freezer\" class=\"method trait-impl\"><a href=\"#method.is_freezer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_freezer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the freezer of the <code>collection</code>.</div></details></div></details>","InspectRole<<T as Config>::AccountId>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; IntegrityTest for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutate%3C%3CT+as+Config%3E::AccountId,+ItemConfig%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Mutate%3C%3CT+as+Config%3E::AccountId,+ItemConfig%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Mutate&lt;&lt;T as Config&gt;::AccountId, ItemConfig&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint_into\" class=\"method trait-impl\"><a href=\"#method.mint_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mint_into</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    item_config: &amp;ItemConfig,\n    deposit_collection_owner: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Mint some <code>item</code> of <code>collection</code> to be owned by <code>who</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method trait-impl\"><a href=\"#method.burn\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">burn</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Burn some <code>item</code> of <code>collection</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attribute\" class=\"method trait-impl\"><a href=\"#method.set_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>],\n    value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Set attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_typed_attribute\" class=\"method trait-impl\"><a href=\"#method.set_typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_typed_attribute</a>&lt;K, V&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,\n    V: Encode,</div></h4></section></summary><div class='docblock'>Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.set_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>],\n    value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Set attribute <code>value</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.set_typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_typed_collection_attribute</a>&lt;K, V&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,\n    V: Encode,</div></h4></section></summary><div class='docblock'>Attempt to set the strongly-typed attribute <code>value</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Clear attribute of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_typed_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_typed_attribute</a>&lt;K&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,</div></h4></section></summary><div class='docblock'>Attempt to clear the strongly-typed attribute of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Clear attribute of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_typed_collection_attribute</a>&lt;K&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,</div></h4></section></summary><div class='docblock'>Attempt to clear the strongly-typed attribute of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details></div></details>","Mutate<<T as Config>::AccountId, ItemConfig>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnGenesis for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnRuntimeUpgrade for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_attribute_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_attribute_key</a>(\n    key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct an attribute’s key.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided attribute <code>key</code> is too long.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_attribute_value\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_attribute_value</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct an attribute’s value.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided <code>value</code> is too long.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_system_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">has_system_attribute</a>(\n    collection: &amp;&lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &amp;&lt;T as Config&lt;I&gt;&gt;::ItemId,\n    attribute_key: PalletAttributes&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to check whether a system attribute is set for a given item.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided pallet attribute is too long.</p>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_metadata</a>(\n    metadata: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct metadata.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectMetadata\"><code>IncorrectMetadata</code></a> dispatch\nerror if the provided metadata is too long.</p>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    admin: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Issue a new collection of non-fungible items from a public origin.</p>\n<p>This new collection has no items initially and its owner is the origin.</p>\n<p>The origin must be Signed and the sender must have sufficient funds free.</p>\n<p><code>CollectionDeposit</code> funds of sender are reserved.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>admin</code>: The admin of this collection. The admin is the initial address of each\nmember of the collection’s admin team.</li>\n</ul>\n<p>Emits <code>Created</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_create</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Issue a new collection of non-fungible items from a privileged origin.</p>\n<p>This new collection has no items initially.</p>\n<p>The origin must conform to <code>ForceOrigin</code>.</p>\n<p>Unlike <code>create</code>, no funds are reserved.</p>\n<ul>\n<li><code>owner</code>: The owner of this collection of items. The owner has full superuser\npermissions over this item, but may later change and configure the permissions using\n<code>transfer_ownership</code> and <code>set_team</code>.</li>\n</ul>\n<p>Emits <code>ForceCreated</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">destroy</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    witness: DestroyWitness\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy a collection of fungible items.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be <code>Signed</code> and the sender must be the\nowner of the <code>collection</code>.</p>\n<p>NOTE: The collection must have 0 items to be destroyed.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to be destroyed.</li>\n<li><code>witness</code>: Information on the items minted in the collection. This must be\ncorrect.</li>\n</ul>\n<p>Emits <code>Destroyed</code> event when successful.</p>\n<p>Weight: <code>O(m + c + a)</code> where:</p>\n<ul>\n<li><code>m = witness.item_metadatas</code></li>\n<li><code>c = witness.item_configs</code></li>\n<li><code>a = witness.attributes</code></li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mint</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    mint_to: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    witness_data: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;MintWitness&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item of a particular collection.</p>\n<p>The origin must be Signed and the sender must comply with the <code>mint_settings</code> rules.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be minted.</li>\n<li><code>item</code>: An identifier of the new item.</li>\n<li><code>mint_to</code>: Account into which the item will be minted.</li>\n<li><code>witness_data</code>: When the mint type is <code>HolderOf(collection_id)</code>, then the owned\nitem_id from that collection needs to be provided within the witness data object. If\nthe mint price is set, then it should be additionally confirmed in the <code>witness_data</code>.</li>\n</ul>\n<p>Note: the deposit will be taken from the <code>origin</code> and not the <code>owner</code> of the <code>item</code>.</p>\n<p>Emits <code>Issued</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_mint</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    mint_to: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    item_config: ItemConfig\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item of a particular collection from a privileged origin.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be <code>Signed</code> and the sender must be the\nIssuer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be minted.</li>\n<li><code>item</code>: An identifier of the new item.</li>\n<li><code>mint_to</code>: Account into which the item will be minted.</li>\n<li><code>item_config</code>: A config of the new item.</li>\n</ul>\n<p>Emits <code>Issued</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">burn</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy a single item.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be Signed and the signing account must\nbe the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be burned.</li>\n<li><code>item</code>: The item to be burned.</li>\n</ul>\n<p>Emits <code>Burned</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    dest: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Move an item from the sender account to another.</p>\n<p>Origin must be Signed and the signing account must be either:</p>\n<ul>\n<li>the Owner of the <code>item</code>;</li>\n<li>the approved delegate for the <code>item</code> (in this case, the approval is reset).</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be transferred.</li>\n<li><code>item</code>: The item to be transferred.</li>\n<li><code>dest</code>: The account to receive ownership of the item.</li>\n</ul>\n<p>Emits <code>Transferred</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.redeposit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">redeposit</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    items: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Re-evaluate the deposits on some items.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the items to be reevaluated.</li>\n<li><code>items</code>: The items of the collection whose deposits will be reevaluated.</li>\n</ul>\n<p>NOTE: This exists as a best-effort function. Any items which are unknown or\nin the case that the owner account does not have reservable funds to pay for a\ndeposit increase are ignored. Generally the owner isn’t going to call this on items\nwhose existing deposit is less than the refreshed deposit as it would only cost them,\nso it’s of little consequence.</p>\n<p>It will still return an error in the case that the collection is unknown or the signer\nis not permitted to call it.</p>\n<p>Weight: <code>O(items.len())</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_item_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_item_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallow further unprivileged transfer of an item.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be changed.</li>\n<li><code>item</code>: The item to become non-transferable.</li>\n</ul>\n<p>Emits <code>ItemTransferLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock_item_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unlock_item_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Re-allow unprivileged transfer of an item.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be changed.</li>\n<li><code>item</code>: The item to become transferable.</li>\n</ul>\n<p>Emits <code>ItemTransferUnlocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_collection</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    lock_settings: CollectionSettings\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallows specified settings for the whole collection.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection to be locked.</li>\n<li><code>lock_settings</code>: The settings to be locked.</li>\n</ul>\n<p>Note: it’s possible to only lock(set) the setting, but not to unset it.</p>\n<p>Emits <code>CollectionLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_ownership\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer_ownership</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Owner of a collection.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection whose owner should be changed.</li>\n<li><code>owner</code>: The new Owner of this collection. They must have called\n<code>set_accept_ownership</code> with <code>collection</code> in order for this operation to succeed.</li>\n</ul>\n<p>Emits <code>OwnerChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_team\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_team</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    issuer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;,\n    admin: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;,\n    freezer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Issuer, Admin and Freezer of a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\n<code>collection</code>.</p>\n<p>Note: by setting the role to <code>None</code> only the <code>ForceOrigin</code> will be able to change it\nafter to <code>Some(account)</code>.</p>\n<ul>\n<li><code>collection</code>: The collection whose team should be changed.</li>\n<li><code>issuer</code>: The new Issuer of this collection.</li>\n<li><code>admin</code>: The new Admin of this collection.</li>\n<li><code>freezer</code>: The new Freezer of this collection.</li>\n</ul>\n<p>Emits <code>TeamChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_collection_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_collection_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Owner of a collection.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection.</li>\n<li><code>owner</code>: The new Owner of this collection.</li>\n</ul>\n<p>Emits <code>OwnerChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_collection_config\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_collection_config</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the config of a collection.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection.</li>\n<li><code>config</code>: The new config of this collection.</li>\n</ul>\n<p>Emits <code>CollectionConfigChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approve_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">approve_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    maybe_deadline: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Approve an item to be transferred by a delegated third-party account.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\n<code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be approved for delegated transfer.</li>\n<li><code>item</code>: The item to be approved for delegated transfer.</li>\n<li><code>delegate</code>: The account to delegate permission to transfer the item.</li>\n<li><code>maybe_deadline</code>: Optional deadline for the approval. Specified by providing the\nnumber of blocks after which the approval will expire</li>\n</ul>\n<p>Emits <code>TransferApproved</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_approval\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_approval</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel one of the transfer approvals for a specific item.</p>\n<p>Origin must be either:</p>\n<ul>\n<li>the <code>Force</code> origin;</li>\n<li><code>Signed</code> with the signer being the Owner of the <code>item</code>;</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item of whose approval will be cancelled.</li>\n<li><code>item</code>: The item of the collection of whose approval will be cancelled.</li>\n<li><code>delegate</code>: The account that is going to loose their approval.</li>\n</ul>\n<p>Emits <code>ApprovalCancelled</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_all_transfer_approvals\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_all_transfer_approvals</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel all the approvals of a specific item.</p>\n<p>Origin must be either:</p>\n<ul>\n<li>the <code>Force</code> origin;</li>\n<li><code>Signed</code> with the signer being the Owner of the <code>item</code>;</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item of whose approvals will be cleared.</li>\n<li><code>item</code>: The item of the collection of whose approvals will be cleared.</li>\n</ul>\n<p>Emits <code>AllApprovalsCancelled</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_item_properties\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_item_properties</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    lock_metadata: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>,\n    lock_attributes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallows changing the metadata or attributes of the item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin\nof the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection if the <code>item</code>.</li>\n<li><code>item</code>: An item to be locked.</li>\n<li><code>lock_metadata</code>: Specifies whether the metadata should be locked.</li>\n<li><code>lock_attributes</code>: Specifies whether the attributes in the <code>CollectionOwner</code> namespace\nshould be locked.</li>\n</ul>\n<p>Note: <code>lock_attributes</code> affects the attributes in the <code>CollectionOwner</code> namespace only.\nWhen the metadata or attributes are locked, it won’t be possible the unlock them.</p>\n<p>Emits <code>ItemPropertiesLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;,\n    value: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set an attribute for a collection or item.</p>\n<p>Origin must be Signed and must conform to the namespace ruleset:</p>\n<ul>\n<li><code>CollectionOwner</code> namespace could be modified by the <code>collection</code> Admin only;</li>\n<li><code>ItemOwner</code> namespace could be modified by the <code>maybe_item</code> owner only. <code>maybe_item</code>\nshould be set in that case;</li>\n<li><code>Account(AccountId)</code> namespace could be modified only when the <code>origin</code> was given a\npermission to do so;</li>\n</ul>\n<p>The funds of <code>origin</code> are reserved according to the formula:\n<code>AttributeDepositBase + DepositPerByte * (key.len + value.len)</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n<li><code>value</code>: The value to which to set the attribute.</li>\n</ul>\n<p>Emits <code>AttributeSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_set_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_set_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    set_as: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;,\n    value: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Force-set an attribute for a collection or item.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<p>If the attribute already exists and it was set by another account, the deposit\nwill be returned to the previous owner.</p>\n<ul>\n<li><code>set_as</code>: An optional owner of the attribute.</li>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n<li><code>value</code>: The value to which to set the attribute.</li>\n</ul>\n<p>Emits <code>AttributeSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear an attribute for a collection or item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\nattribute.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to clear.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to clear.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n</ul>\n<p>Emits <code>AttributeCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approve_item_attributes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">approve_item_attributes</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Approve item’s attributes to be changed by a delegated third-party account.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: A collection of the item.</li>\n<li><code>item</code>: The item that holds attributes.</li>\n<li><code>delegate</code>: The account to delegate permission to change attributes of the item.</li>\n</ul>\n<p>Emits <code>ItemAttributesApprovalAdded</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_item_attributes_approval\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_item_attributes_approval</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    witness: CancelAttributesApprovalWitness\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel the previously provided approval to change item’s attributes.\nAll the previously set attributes by the <code>delegate</code> will be removed.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: Collection that the item is contained within.</li>\n<li><code>item</code>: The item that holds attributes.</li>\n<li><code>delegate</code>: The previously approved account to remove.</li>\n</ul>\n<p>Emits <code>ItemAttributesApprovalRemoved</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    data: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the metadata for an item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin of the\n<code>collection</code>.</p>\n<p>If the origin is Signed, then funds of signer are reserved according to the formula:\n<code>MetadataDepositBase + DepositPerByte * data.len</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>data</code>: The general information of this item. Limited in length by <code>StringLimit</code>.</li>\n</ul>\n<p>Emits <code>ItemMetadataSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the metadata for an item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin of the\n<code>collection</code>.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to clear.</li>\n<li><code>item</code>: The identifier of the item whose metadata to clear.</li>\n</ul>\n<p>Emits <code>ItemMetadataCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_collection_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    data: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the metadata for a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Admin of\nthe <code>collection</code>.</p>\n<p>If the origin is <code>Signed</code>, then funds of signer are reserved according to the formula:\n<code>MetadataDepositBase + DepositPerByte * data.len</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the item whose metadata to update.</li>\n<li><code>data</code>: The general information of this item. Limited in length by <code>StringLimit</code>.</li>\n</ul>\n<p>Emits <code>CollectionMetadataSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_collection_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_collection_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the metadata for a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Admin of\nthe <code>collection</code>.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose metadata to clear.</li>\n</ul>\n<p>Emits <code>CollectionMetadataCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_accept_ownership\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_accept_ownership</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_collection: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set (or reset) the acceptance of ownership for a particular account.</p>\n<p>Origin must be <code>Signed</code> and if <code>maybe_collection</code> is <code>Some</code>, then the signer must have a\nprovider reference.</p>\n<ul>\n<li><code>maybe_collection</code>: The identifier of the collection whose ownership the signer is\nwilling to accept, or if <code>None</code>, an indication that the signer is willing to accept no\nownership transferal.</li>\n</ul>\n<p>Emits <code>OwnershipAcceptanceChanged</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_max_supply\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_collection_max_supply</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    max_supply: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the maximum number of items a collection could have.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Owner of\nthe <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to change.</li>\n<li><code>max_supply</code>: The maximum number of items a collection could have.</li>\n</ul>\n<p>Emits <code>CollectionMaxSupplySet</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_mint_settings\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">update_mint_settings</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    mint_settings: MintSettings&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Update mint settings.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Issuer\nof the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to change.</li>\n<li><code>mint_settings</code>: The new mint settings.</li>\n</ul>\n<p>Emits <code>CollectionMintSettingsUpdated</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_price\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_price</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;,\n    whitelisted_buyer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set (or reset) the price for an item.</p>\n<p>Origin must be Signed and must be the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item to set the price for.</li>\n<li><code>price</code>: The price for the item. Pass <code>None</code>, to reset the price.</li>\n<li><code>buyer</code>: Restricts the buy operation to a specific account.</li>\n</ul>\n<p>Emits <code>ItemPriceSet</code> on success if the price is not <code>None</code>.\nEmits <code>ItemPriceRemoved</code> on success if the price is <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.buy_item\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">buy_item</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    bid_price: &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Allows to buy an item if it’s up for sale.</p>\n<p>Origin must be Signed and must not be the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item the sender wants to buy.</li>\n<li><code>bid_price</code>: The price the sender is willing to pay.</li>\n</ul>\n<p>Emits <code>ItemBought</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pay_tips\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pay_tips</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    tips: BoundedVec&lt;ItemTip&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &lt;T as Config&lt;I&gt;&gt;::MaxTips&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Allows to pay the tips.</p>\n<p>Origin must be Signed.</p>\n<ul>\n<li><code>tips</code>: Tips array.</li>\n</ul>\n<p>Emits <code>TipSent</code> on every tip transfer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    offered_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    offered_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    desired_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_desired_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    maybe_price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PriceWithDirection&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;,\n    duration: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Register a new atomic swap, declaring an intention to send an <code>item</code> in exchange for\n<code>desired_item</code> from origin to target on the current blockchain.\nThe target can execute the swap during the specified <code>duration</code> of blocks (if set).\nAdditionally, the price could be set for the desired <code>item</code>.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item an owner wants to give.</li>\n<li><code>desired_collection</code>: The collection of the desired item.</li>\n<li><code>desired_item</code>: The desired item an owner wants to receive.</li>\n<li><code>maybe_price</code>: The price an owner is willing to pay or receive for the desired <code>item</code>.</li>\n<li><code>duration</code>: A deadline for the swap. Specified by providing the number of blocks\nafter which the swap will expire.</li>\n</ul>\n<p>Emits <code>SwapCreated</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    offered_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    offered_item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel an atomic swap.</p>\n<p>Origin must be Signed.\nOrigin must be an owner of the <code>item</code> if the deadline hasn’t expired.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item an owner wants to give.</li>\n</ul>\n<p>Emits <code>SwapCancelled</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">claim_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    send_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    send_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    receive_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    receive_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    witness_price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PriceWithDirection&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Claim an atomic swap.\nThis method executes a pending swap, that was created by a counterpart before.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>send_collection</code>: The collection of the item to be sent.</li>\n<li><code>send_item</code>: The item to be sent.</li>\n<li><code>receive_collection</code>: The collection of the item to be received.</li>\n<li><code>receive_item</code>: The item to be received.</li>\n<li><code>witness_price</code>: A price that was previously agreed on.</li>\n</ul>\n<p>Emits <code>SwapClaimed</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint_pre_signed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mint_pre_signed</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    mint_data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;PreSignedMint&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;,\n    signature: &lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item by providing the pre-signed approval.</p>\n<p>Origin must be Signed.</p>\n<ul>\n<li><code>mint_data</code>: The pre-signed approval that consists of the information about the item,\nits metadata, attributes, who can mint it (<code>None</code> for anyone) and until what block\nnumber.</li>\n<li><code>signature</code>: The signature of the <code>data</code> object.</li>\n<li><code>signer</code>: The <code>data</code> object’s signer. Should be an Issuer of the collection.</li>\n</ul>\n<p>Emits <code>Issued</code> on success.\nEmits <code>AttributeSet</code> if the attributes were provided.\nEmits <code>ItemMetadataSet</code> if the metadata was not empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attributes_pre_signed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_attributes_pre_signed</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    data: PreSignedAttributes&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    signature: &lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set attributes for an item by providing the pre-signed approval.</p>\n<p>Origin must be Signed and must be an owner of the <code>data.item</code>.</p>\n<ul>\n<li><code>data</code>: The pre-signed approval that consists of the information about the item,\nattributes to update and until what block number.</li>\n<li><code>signature</code>: The signature of the <code>data</code> object.</li>\n<li><code>signer</code>: The <code>data</code> object’s signer. Should be an Admin of the collection for the\n<code>CollectionOwner</code> namespace.</li>\n</ul>\n<p>Emits <code>AttributeSet</code> for each provided attribute.\nEmits <code>ItemAttributesApprovalAdded</code> if the approval wasn’t set before.\nEmits <code>PreSignedAttributesSet</code> on success.</p>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_create_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_create_collection</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;T as Config&gt;::AccountId,\n    admin: &lt;T as Config&gt;::AccountId,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;,\n    deposit: &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    event: Event&lt;T, I&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new collection with the given <code>collection</code>, <code>owner</code>, <code>admin</code>, <code>config</code>, <code>deposit</code>,\nand <code>event</code>.</p>\n<p>This function creates a new collection with the provided parameters. It reserves the\nrequired deposit from the owner’s account, sets the collection details, assigns admin roles,\nand inserts the provided configuration. Finally, it emits the specified event upon success.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a <a href=\"crate::Error::CollectionIdInUse\"><code>CollectionIdInUse</code></a> error if the\ncollection ID is already in use.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_destroy_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_destroy_collection</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    witness: DestroyWitness,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DestroyWitness, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy the specified collection with the given <code>collection</code>, <code>witness</code>, and\n<code>maybe_check_owner</code>.</p>\n<p>This function destroys the specified collection if it exists and meets the necessary\nconditions. It checks the provided <code>witness</code> against the actual collection details and\nremoves the collection along with its associated metadata, attributes, and configurations.\nThe necessary deposits are returned to the corresponding accounts, and the roles and\nconfigurations for the collection are cleared. Finally, it emits the <code>Destroyed</code> event upon\nsuccessful destruction.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is not found\n(<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the provided <code>maybe_check_owner</code> does not match the actual owner\n(<a href=\"crate::Error::NoPermission\"><code>NoPermission</code></a>).</li>\n<li>If the collection is not empty (contains items)\n(<a href=\"crate::Error::CollectionNotEmpty\"><code>CollectionNotEmpty</code></a>).</li>\n<li>If the <code>witness</code> does not match the actual collection details\n(<a href=\"crate::Error::BadWitness\"><code>BadWitness</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_mint</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    maybe_depositor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n    mint_to: &lt;T as Config&gt;::AccountId,\n    item_config: ItemConfig,\n    with_details_and_config: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;CollectionDetails&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint a new unique item with the given <code>collection</code>, <code>item</code>, and other minting configuration\ndetails.</p>\n<p>This function performs the minting of a new unique item. It checks if the item does not\nalready exist in the given collection, and if the max supply limit (if configured) is not\nreached. It also reserves the required deposit for the item and sets the item details\naccordingly.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item already exists in the collection\n(<a href=\"crate::Error::AlreadyExists\"><code>AlreadyExists</code></a>).</li>\n<li>If the item configuration already exists\n(<a href=\"crate::Error::InconsistentItemConfig\"><code>InconsistentItemConfig</code></a>).</li>\n<li>If the max supply limit (if configured) for the collection is reached\n(<a href=\"crate::Error::MaxSupplyReached\"><code>MaxSupplyReached</code></a>).</li>\n<li>If any error occurs in the <code>with_details_and_config</code> closure.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_burn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_burn</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    with_details: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;ItemDetails&lt;&lt;T as Config&gt;::AccountId, ItemDeposit&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;T as Config&gt;::AccountId&gt;, BoundedBTreeMap&lt;&lt;T as Config&gt;::AccountId, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;, &lt;T as Config&lt;I&gt;&gt;::ApprovalsLimit&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Burns the specified item with the given <code>collection</code>, <code>item</code>, and <code>with_details</code>.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item is locked (<a href=\"crate::Error::ItemLocked\"><code>ItemLocked</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_transfer</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    dest: &lt;T as Config&gt;::AccountId,\n    with_details: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;CollectionDetails&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &amp;mut ItemDetails&lt;&lt;T as Config&gt;::AccountId, ItemDeposit&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;T as Config&gt;::AccountId&gt;, BoundedBTreeMap&lt;&lt;T as Config&gt;::AccountId, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;, &lt;T as Config&lt;I&gt;&gt;::ApprovalsLimit&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer an NFT to the specified destination account.</p>\n<ul>\n<li><code>collection</code>: The ID of the collection to which the NFT belongs.</li>\n<li><code>item</code>: The ID of the NFT to transfer.</li>\n<li><code>dest</code>: The destination account to which the NFT will be transferred.</li>\n<li><code>with_details</code>: A closure that provides access to the collection and item details,\nallowing customization of the transfer process.</li>\n</ul>\n<p>This function performs the actual transfer of an NFT to the destination account.\nIt checks various conditions like item lock status and transferability settings\nfor the collection and item before transferring the NFT.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item ID is invalid (<a href=\"crate::Error::UnknownItem\"><code>UnknownItem</code></a>).</li>\n<li>If the item is locked or transferring it is disabled\n(<a href=\"crate::Error::ItemLocked\"><code>ItemLocked</code></a>).</li>\n<li>If the collection or item is non-transferable\n(<a href=\"crate::Error::ItemsNonTransferable\"><code>ItemsNonTransferable</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.group_roles_by_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">group_roles_by_account</a>(\n    input: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;T as Config&gt;::AccountId, CollectionRole)&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;T as Config&gt;::AccountId, CollectionRoles)&gt;</h4></section></summary><div class=\"docblock\"><p>Groups provided roles by account, given one account could have multiple roles.</p>\n<ul>\n<li><code>input</code>: A vector of (Account, Role) tuples.</li>\n</ul>\n<p>Returns a grouped vector of <code>(Account, Roles)</code> tuples.</p>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">owner</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class=\"docblock\"><p>Get the owner of the item, if the item exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">collection_owner</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class=\"docblock\"><p>Get the owner of the collection, if the collection exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_signature\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">validate_signature</a>(\n    data: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;,\n    signature: &amp;&lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Validates the signature of the given data with the provided signer’s account ID.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a <a href=\"crate::Error::WrongSignature\"><code>WrongSignature</code></a> error if the\nsignature is invalid or the verification process fails.</p>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletsInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T, I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StorageInfoTrait for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transfer%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Transfer%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Transfer&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    destination: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Transfer <code>item</code> of <code>collection</code> into <code>destination</code> account.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.disable_transfer\" class=\"method trait-impl\"><a href=\"#method.disable_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">disable_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Disable the <code>item</code> of <code>collection</code> transfer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enable_transfer\" class=\"method trait-impl\"><a href=\"#method.enable_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enable_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Re-enable the <code>item</code> of <code>collection</code> transfer. <a>Read more</a></div></details></div></details>","Transfer<<T as Config>::AccountId>","asset_hub_polkadot_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; WhitelistedStorageKeys for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","asset_hub_polkadot_runtime::Nfts"],["<section id=\"impl-Eq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T, I&gt;</h3></section>","Eq","asset_hub_polkadot_runtime::Nfts"]],
"asset_hub_westend_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Callable&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T, I&gt;</h4></section></div></details>","Callable<T>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Create%3C%3CT+as+Config%3E::AccountId,+CollectionConfig%3C%3C%3CT+as+Config%3CI%3E%3E::Currency+as+Currency%3C%3CT+as+Config%3E::AccountId%3E%3E::Balance,+%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number,+%3CT+as+Config%3CI%3E%3E::CollectionId%3E%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Create%3C%3CT+as+Config%3E::AccountId,+CollectionConfig%3C%3C%3CT+as+Config%3CI%3E%3E::Currency+as+Currency%3C%3CT+as+Config%3E::AccountId%3E%3E::Balance,+%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number,+%3CT+as+Config%3CI%3E%3E::CollectionId%3E%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Create&lt;&lt;T as Config&gt;::AccountId, CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_collection\" class=\"method trait-impl\"><a href=\"#method.create_collection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_collection</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    admin: &amp;&lt;T as Config&gt;::AccountId,\n    config: &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>collection</code> of nonfungible items to be owned by <code>who</code> and managed by <code>admin</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_collection_with_id\" class=\"method trait-impl\"><a href=\"#method.create_collection_with_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_collection_with_id</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    admin: &amp;&lt;T as Config&gt;::AccountId,\n    config: &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a collection of nonfungible items with <code>collection</code> Id to be owned by <code>who</code> and\nmanaged by <code>admin</code>. Should be only used for applications that do not have an\nincremental order for the collection IDs and is a replacement for the auto id creation.</p>\n<p>SAFETY: This function can break the pallet if it is used in combination with the auto\nincrement functionality, as it can claim a value in the ID sequence.</p>\n</div></details></div></details>","Create<<T as Config>::AccountId, CollectionConfig<<<T as Config<I>>::Currency as Currency<<T as Config>::AccountId>>::Balance, <<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config<I>>::CollectionId>>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Destroy%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Destroy%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Destroy&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.DestroyWitness\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.DestroyWitness\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">DestroyWitness</a> = DestroyWitness</h4></section></summary><div class='docblock'>The witness data needed to destroy an item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_destroy_witness\" class=\"method trait-impl\"><a href=\"#method.get_destroy_witness\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_destroy_witness</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;DestroyWitness&gt;</h4></section></summary><div class='docblock'>Provide the appropriate witness data needed to destroy an item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy\" class=\"method trait-impl\"><a href=\"#method.destroy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">destroy</a>(\n    collection: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    witness: &lt;Pallet&lt;T, I&gt; as Destroy&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::DestroyWitness,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T, I&gt; as Destroy&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::DestroyWitness, DispatchError&gt;</h4></section></summary><div class='docblock'>Destroy an existing fungible item. <a>Read more</a></div></details></div></details>","Destroy<<T as Config>::AccountId>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; GetStorageVersion for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T, I&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inspect%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Inspect%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Inspect&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.attribute\" class=\"method trait-impl\"><a href=\"#method.attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>When <code>key</code> is empty, we return the item metadata value.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.custom_attribute\" class=\"method trait-impl\"><a href=\"#method.custom_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">custom_attribute</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the custom attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_attribute\" class=\"method trait-impl\"><a href=\"#method.system_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">system_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the system attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_attribute\" class=\"method trait-impl\"><a href=\"#method.collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the attribute value of <code>item</code> of <code>collection</code> corresponding to <code>key</code>.</p>\n<p>When <code>key</code> is empty, we return the item metadata value.</p>\n<p>By default this is <code>None</code>; no attributes are defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_transfer\" class=\"method trait-impl\"><a href=\"#method.can_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">can_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.</p>\n<p>Default implementation is that all items are transferable.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ItemId</a> = &lt;T as Config&lt;I&gt;&gt;::ItemId</h4></section></summary><div class='docblock'>Type for identifying an item.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CollectionId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CollectionId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CollectionId</a> = &lt;T as Config&lt;I&gt;&gt;::CollectionId</h4></section></summary><div class='docblock'>Type for identifying a collection (an identifier for an independent collection of\nitems).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owner\" class=\"method trait-impl\"><a href=\"#method.owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owner</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>Returns the owner of <code>item</code> of <code>collection</code>, or <code>None</code> if the item doesn’t exist\n(or somehow has no owner).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_owner\" class=\"method trait-impl\"><a href=\"#method.collection_owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collection_owner</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>Returns the owner of the <code>collection</code>, if there is one. For many NFTs this may not\nmake any sense, so users of this API should not be surprised to find a collection\nresults in <code>None</code> here.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_custom_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_custom_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_custom_attribute</a>&lt;K, V&gt;(\n    account: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed custom attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_system_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_system_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_system_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    item: &amp;Self::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed system attribute value of <code>item</code> of <code>collection</code> corresponding to\n<code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">typed_collection_attribute</a>&lt;K, V&gt;(\n    collection: &amp;Self::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: Encode,\n    V: Decode,</div></h4></section></summary><div class='docblock'>Returns the strongly-typed attribute value of <code>collection</code> corresponding to <code>key</code>. <a>Read more</a></div></details></div></details>","Inspect<<T as Config>::AccountId>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InspectEnumerable%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-InspectEnumerable%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.collections\" class=\"method trait-impl\"><a href=\"#method.collections\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">collections</a>(\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionsIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the collections in existence.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.items\" class=\"method trait-impl\"><a href=\"#method.items\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">items</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemsIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of a <code>collection</code> in existence.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned\" class=\"method trait-impl\"><a href=\"#method.owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owned</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::OwnedIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of all collections owned by <code>who</code>.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned_in_collection\" class=\"method trait-impl\"><a href=\"#method.owned_in_collection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owned_in_collection</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; &lt;Pallet&lt;T, I&gt; as InspectEnumerable&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::OwnedInCollectionIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the items of <code>collection</code> owned by <code>who</code>.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CollectionsIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CollectionsIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CollectionsIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::collections</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemsIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemsIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ItemsIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::items</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnedIterator</a> = KeyPrefixIterator&lt;(&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId)&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::owned</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedInCollectionIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedInCollectionIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnedInCollectionIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;</h4></section></summary><div class='docblock'>The iterator type for [<code>Self::owned_in_collection</code>].</div></details></div></details>","InspectEnumerable<<T as Config>::AccountId>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InspectRole%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-InspectRole%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; InspectRole&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_issuer\" class=\"method trait-impl\"><a href=\"#method.is_issuer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_issuer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the issuer of the <code>collection</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_admin\" class=\"method trait-impl\"><a href=\"#method.is_admin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_admin</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the admin of the <code>collection</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_freezer\" class=\"method trait-impl\"><a href=\"#method.is_freezer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_freezer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    who: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>who</code> is the freezer of the <code>collection</code>.</div></details></div></details>","InspectRole<<T as Config>::AccountId>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; IntegrityTest for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutate%3C%3CT+as+Config%3E::AccountId,+ItemConfig%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Mutate%3C%3CT+as+Config%3E::AccountId,+ItemConfig%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Mutate&lt;&lt;T as Config&gt;::AccountId, ItemConfig&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint_into\" class=\"method trait-impl\"><a href=\"#method.mint_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mint_into</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    item_config: &amp;ItemConfig,\n    deposit_collection_owner: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Mint some <code>item</code> of <code>collection</code> to be owned by <code>who</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method trait-impl\"><a href=\"#method.burn\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">burn</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Burn some <code>item</code> of <code>collection</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attribute\" class=\"method trait-impl\"><a href=\"#method.set_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>],\n    value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Set attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_typed_attribute\" class=\"method trait-impl\"><a href=\"#method.set_typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_typed_attribute</a>&lt;K, V&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,\n    V: Encode,</div></h4></section></summary><div class='docblock'>Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.set_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>],\n    value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Set attribute <code>value</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.set_typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_typed_collection_attribute</a>&lt;K, V&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,\n    V: Encode,</div></h4></section></summary><div class='docblock'>Attempt to set the strongly-typed attribute <code>value</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Clear attribute of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_typed_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_typed_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_typed_attribute</a>&lt;K&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,</div></h4></section></summary><div class='docblock'>Attempt to clear the strongly-typed attribute of <code>item</code> of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_collection_attribute</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Clear attribute of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_typed_collection_attribute\" class=\"method trait-impl\"><a href=\"#method.clear_typed_collection_attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_typed_collection_attribute</a>&lt;K&gt;(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;<div class=\"where\">where\n    K: Encode,</div></h4></section></summary><div class='docblock'>Attempt to clear the strongly-typed attribute of <code>collection</code>’s <code>key</code>. <a>Read more</a></div></details></div></details>","Mutate<<T as Config>::AccountId, ItemConfig>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnGenesis for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnRuntimeUpgrade for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_attribute_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_attribute_key</a>(\n    key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct an attribute’s key.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided attribute <code>key</code> is too long.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_attribute_value\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_attribute_value</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct an attribute’s value.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided <code>value</code> is too long.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_system_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">has_system_attribute</a>(\n    collection: &amp;&lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &amp;&lt;T as Config&lt;I&gt;&gt;::ItemId,\n    attribute_key: PalletAttributes&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to check whether a system attribute is set for a given item.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectData\"><code>IncorrectData</code></a> error if the\nprovided pallet attribute is too long.</p>\n</div></details></div></details>",0,"asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.construct_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">construct_metadata</a>(\n    metadata: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A helper method to construct metadata.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns an <a href=\"crate::Error::IncorrectMetadata\"><code>IncorrectMetadata</code></a> dispatch\nerror if the provided metadata is too long.</p>\n</div></details></div></details>",0,"asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    admin: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Issue a new collection of non-fungible items from a public origin.</p>\n<p>This new collection has no items initially and its owner is the origin.</p>\n<p>The origin must be Signed and the sender must have sufficient funds free.</p>\n<p><code>CollectionDeposit</code> funds of sender are reserved.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>admin</code>: The admin of this collection. The admin is the initial address of each\nmember of the collection’s admin team.</li>\n</ul>\n<p>Emits <code>Created</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_create</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Issue a new collection of non-fungible items from a privileged origin.</p>\n<p>This new collection has no items initially.</p>\n<p>The origin must conform to <code>ForceOrigin</code>.</p>\n<p>Unlike <code>create</code>, no funds are reserved.</p>\n<ul>\n<li><code>owner</code>: The owner of this collection of items. The owner has full superuser\npermissions over this item, but may later change and configure the permissions using\n<code>transfer_ownership</code> and <code>set_team</code>.</li>\n</ul>\n<p>Emits <code>ForceCreated</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">destroy</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    witness: DestroyWitness\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy a collection of fungible items.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be <code>Signed</code> and the sender must be the\nowner of the <code>collection</code>.</p>\n<p>NOTE: The collection must have 0 items to be destroyed.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to be destroyed.</li>\n<li><code>witness</code>: Information on the items minted in the collection. This must be\ncorrect.</li>\n</ul>\n<p>Emits <code>Destroyed</code> event when successful.</p>\n<p>Weight: <code>O(m + c + a)</code> where:</p>\n<ul>\n<li><code>m = witness.item_metadatas</code></li>\n<li><code>c = witness.item_configs</code></li>\n<li><code>a = witness.attributes</code></li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mint</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    mint_to: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    witness_data: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;MintWitness&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item of a particular collection.</p>\n<p>The origin must be Signed and the sender must comply with the <code>mint_settings</code> rules.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be minted.</li>\n<li><code>item</code>: An identifier of the new item.</li>\n<li><code>mint_to</code>: Account into which the item will be minted.</li>\n<li><code>witness_data</code>: When the mint type is <code>HolderOf(collection_id)</code>, then the owned\nitem_id from that collection needs to be provided within the witness data object. If\nthe mint price is set, then it should be additionally confirmed in the <code>witness_data</code>.</li>\n</ul>\n<p>Note: the deposit will be taken from the <code>origin</code> and not the <code>owner</code> of the <code>item</code>.</p>\n<p>Emits <code>Issued</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_mint</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    mint_to: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    item_config: ItemConfig\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item of a particular collection from a privileged origin.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be <code>Signed</code> and the sender must be the\nIssuer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be minted.</li>\n<li><code>item</code>: An identifier of the new item.</li>\n<li><code>mint_to</code>: Account into which the item will be minted.</li>\n<li><code>item_config</code>: A config of the new item.</li>\n</ul>\n<p>Emits <code>Issued</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">burn</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy a single item.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be Signed and the signing account must\nbe the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be burned.</li>\n<li><code>item</code>: The item to be burned.</li>\n</ul>\n<p>Emits <code>Burned</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    dest: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Move an item from the sender account to another.</p>\n<p>Origin must be Signed and the signing account must be either:</p>\n<ul>\n<li>the Owner of the <code>item</code>;</li>\n<li>the approved delegate for the <code>item</code> (in this case, the approval is reset).</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be transferred.</li>\n<li><code>item</code>: The item to be transferred.</li>\n<li><code>dest</code>: The account to receive ownership of the item.</li>\n</ul>\n<p>Emits <code>Transferred</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.redeposit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">redeposit</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    items: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Re-evaluate the deposits on some items.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the items to be reevaluated.</li>\n<li><code>items</code>: The items of the collection whose deposits will be reevaluated.</li>\n</ul>\n<p>NOTE: This exists as a best-effort function. Any items which are unknown or\nin the case that the owner account does not have reservable funds to pay for a\ndeposit increase are ignored. Generally the owner isn’t going to call this on items\nwhose existing deposit is less than the refreshed deposit as it would only cost them,\nso it’s of little consequence.</p>\n<p>It will still return an error in the case that the collection is unknown or the signer\nis not permitted to call it.</p>\n<p>Weight: <code>O(items.len())</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_item_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_item_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallow further unprivileged transfer of an item.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be changed.</li>\n<li><code>item</code>: The item to become non-transferable.</li>\n</ul>\n<p>Emits <code>ItemTransferLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock_item_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unlock_item_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Re-allow unprivileged transfer of an item.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be changed.</li>\n<li><code>item</code>: The item to become transferable.</li>\n</ul>\n<p>Emits <code>ItemTransferUnlocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_collection</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    lock_settings: CollectionSettings\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallows specified settings for the whole collection.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection to be locked.</li>\n<li><code>lock_settings</code>: The settings to be locked.</li>\n</ul>\n<p>Note: it’s possible to only lock(set) the setting, but not to unset it.</p>\n<p>Emits <code>CollectionLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_ownership\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer_ownership</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Owner of a collection.</p>\n<p>Origin must be Signed and the sender should be the Owner of the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection whose owner should be changed.</li>\n<li><code>owner</code>: The new Owner of this collection. They must have called\n<code>set_accept_ownership</code> with <code>collection</code> in order for this operation to succeed.</li>\n</ul>\n<p>Emits <code>OwnerChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_team\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_team</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    issuer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;,\n    admin: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;,\n    freezer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Issuer, Admin and Freezer of a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\n<code>collection</code>.</p>\n<p>Note: by setting the role to <code>None</code> only the <code>ForceOrigin</code> will be able to change it\nafter to <code>Some(account)</code>.</p>\n<ul>\n<li><code>collection</code>: The collection whose team should be changed.</li>\n<li><code>issuer</code>: The new Issuer of this collection.</li>\n<li><code>admin</code>: The new Admin of this collection.</li>\n<li><code>freezer</code>: The new Freezer of this collection.</li>\n</ul>\n<p>Emits <code>TeamChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_collection_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_collection_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Owner of a collection.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection.</li>\n<li><code>owner</code>: The new Owner of this collection.</li>\n</ul>\n<p>Emits <code>OwnerChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_collection_config\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_collection_config</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the config of a collection.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection.</li>\n<li><code>config</code>: The new config of this collection.</li>\n</ul>\n<p>Emits <code>CollectionConfigChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approve_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">approve_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    maybe_deadline: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Approve an item to be transferred by a delegated third-party account.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\n<code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item to be approved for delegated transfer.</li>\n<li><code>item</code>: The item to be approved for delegated transfer.</li>\n<li><code>delegate</code>: The account to delegate permission to transfer the item.</li>\n<li><code>maybe_deadline</code>: Optional deadline for the approval. Specified by providing the\nnumber of blocks after which the approval will expire</li>\n</ul>\n<p>Emits <code>TransferApproved</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_approval\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_approval</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel one of the transfer approvals for a specific item.</p>\n<p>Origin must be either:</p>\n<ul>\n<li>the <code>Force</code> origin;</li>\n<li><code>Signed</code> with the signer being the Owner of the <code>item</code>;</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item of whose approval will be cancelled.</li>\n<li><code>item</code>: The item of the collection of whose approval will be cancelled.</li>\n<li><code>delegate</code>: The account that is going to loose their approval.</li>\n</ul>\n<p>Emits <code>ApprovalCancelled</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_all_transfer_approvals\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_all_transfer_approvals</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel all the approvals of a specific item.</p>\n<p>Origin must be either:</p>\n<ul>\n<li>the <code>Force</code> origin;</li>\n<li><code>Signed</code> with the signer being the Owner of the <code>item</code>;</li>\n</ul>\n<p>Arguments:</p>\n<ul>\n<li><code>collection</code>: The collection of the item of whose approvals will be cleared.</li>\n<li><code>item</code>: The item of the collection of whose approvals will be cleared.</li>\n</ul>\n<p>Emits <code>AllApprovalsCancelled</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_item_properties\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock_item_properties</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    lock_metadata: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>,\n    lock_attributes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallows changing the metadata or attributes of the item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin\nof the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The collection if the <code>item</code>.</li>\n<li><code>item</code>: An item to be locked.</li>\n<li><code>lock_metadata</code>: Specifies whether the metadata should be locked.</li>\n<li><code>lock_attributes</code>: Specifies whether the attributes in the <code>CollectionOwner</code> namespace\nshould be locked.</li>\n</ul>\n<p>Note: <code>lock_attributes</code> affects the attributes in the <code>CollectionOwner</code> namespace only.\nWhen the metadata or attributes are locked, it won’t be possible the unlock them.</p>\n<p>Emits <code>ItemPropertiesLocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;,\n    value: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set an attribute for a collection or item.</p>\n<p>Origin must be Signed and must conform to the namespace ruleset:</p>\n<ul>\n<li><code>CollectionOwner</code> namespace could be modified by the <code>collection</code> Admin only;</li>\n<li><code>ItemOwner</code> namespace could be modified by the <code>maybe_item</code> owner only. <code>maybe_item</code>\nshould be set in that case;</li>\n<li><code>Account(AccountId)</code> namespace could be modified only when the <code>origin</code> was given a\npermission to do so;</li>\n</ul>\n<p>The funds of <code>origin</code> are reserved according to the formula:\n<code>AttributeDepositBase + DepositPerByte * (key.len + value.len)</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n<li><code>value</code>: The value to which to set the attribute.</li>\n</ul>\n<p>Emits <code>AttributeSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_set_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_set_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    set_as: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;,\n    value: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::ValueLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Force-set an attribute for a collection or item.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<p>If the attribute already exists and it was set by another account, the deposit\nwill be returned to the previous owner.</p>\n<ul>\n<li><code>set_as</code>: An optional owner of the attribute.</li>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n<li><code>value</code>: The value to which to set the attribute.</li>\n</ul>\n<p>Emits <code>AttributeSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_attribute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_attribute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    namespace: AttributeNamespace&lt;&lt;T as Config&gt;::AccountId&gt;,\n    key: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::KeyLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear an attribute for a collection or item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Owner of the\nattribute.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to clear.</li>\n<li><code>maybe_item</code>: The identifier of the item whose metadata to clear.</li>\n<li><code>namespace</code>: Attribute’s namespace.</li>\n<li><code>key</code>: The key of the attribute.</li>\n</ul>\n<p>Emits <code>AttributeCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approve_item_attributes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">approve_item_attributes</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Approve item’s attributes to be changed by a delegated third-party account.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: A collection of the item.</li>\n<li><code>item</code>: The item that holds attributes.</li>\n<li><code>delegate</code>: The account to delegate permission to change attributes of the item.</li>\n</ul>\n<p>Emits <code>ItemAttributesApprovalAdded</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_item_attributes_approval\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_item_attributes_approval</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    witness: CancelAttributesApprovalWitness\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel the previously provided approval to change item’s attributes.\nAll the previously set attributes by the <code>delegate</code> will be removed.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: Collection that the item is contained within.</li>\n<li><code>item</code>: The item that holds attributes.</li>\n<li><code>delegate</code>: The previously approved account to remove.</li>\n</ul>\n<p>Emits <code>ItemAttributesApprovalRemoved</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    data: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the metadata for an item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin of the\n<code>collection</code>.</p>\n<p>If the origin is Signed, then funds of signer are reserved according to the formula:\n<code>MetadataDepositBase + DepositPerByte * data.len</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to set.</li>\n<li><code>item</code>: The identifier of the item whose metadata to set.</li>\n<li><code>data</code>: The general information of this item. Limited in length by <code>StringLimit</code>.</li>\n</ul>\n<p>Emits <code>ItemMetadataSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the metadata for an item.</p>\n<p>Origin must be either <code>ForceOrigin</code> or Signed and the sender should be the Admin of the\n<code>collection</code>.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose item’s metadata to clear.</li>\n<li><code>item</code>: The identifier of the item whose metadata to clear.</li>\n</ul>\n<p>Emits <code>ItemMetadataCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_collection_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    data: BoundedVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;T as Config&lt;I&gt;&gt;::StringLimit&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the metadata for a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Admin of\nthe <code>collection</code>.</p>\n<p>If the origin is <code>Signed</code>, then funds of signer are reserved according to the formula:\n<code>MetadataDepositBase + DepositPerByte * data.len</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>collection</code>: The identifier of the item whose metadata to update.</li>\n<li><code>data</code>: The general information of this item. Limited in length by <code>StringLimit</code>.</li>\n</ul>\n<p>Emits <code>CollectionMetadataSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_collection_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_collection_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the metadata for a collection.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Admin of\nthe <code>collection</code>.</p>\n<p>Any deposit is freed for the collection’s owner.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection whose metadata to clear.</li>\n</ul>\n<p>Emits <code>CollectionMetadataCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_accept_ownership\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_accept_ownership</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_collection: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set (or reset) the acceptance of ownership for a particular account.</p>\n<p>Origin must be <code>Signed</code> and if <code>maybe_collection</code> is <code>Some</code>, then the signer must have a\nprovider reference.</p>\n<ul>\n<li><code>maybe_collection</code>: The identifier of the collection whose ownership the signer is\nwilling to accept, or if <code>None</code>, an indication that the signer is willing to accept no\nownership transferal.</li>\n</ul>\n<p>Emits <code>OwnershipAcceptanceChanged</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_collection_max_supply\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_collection_max_supply</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    max_supply: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the maximum number of items a collection could have.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Owner of\nthe <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to change.</li>\n<li><code>max_supply</code>: The maximum number of items a collection could have.</li>\n</ul>\n<p>Emits <code>CollectionMaxSupplySet</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_mint_settings\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">update_mint_settings</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    mint_settings: MintSettings&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Update mint settings.</p>\n<p>Origin must be either <code>ForceOrigin</code> or <code>Signed</code> and the sender should be the Issuer\nof the <code>collection</code>.</p>\n<ul>\n<li><code>collection</code>: The identifier of the collection to change.</li>\n<li><code>mint_settings</code>: The new mint settings.</li>\n</ul>\n<p>Emits <code>CollectionMintSettingsUpdated</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_price\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_price</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;,\n    whitelisted_buyer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set (or reset) the price for an item.</p>\n<p>Origin must be Signed and must be the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item to set the price for.</li>\n<li><code>price</code>: The price for the item. Pass <code>None</code>, to reset the price.</li>\n<li><code>buyer</code>: Restricts the buy operation to a specific account.</li>\n</ul>\n<p>Emits <code>ItemPriceSet</code> on success if the price is not <code>None</code>.\nEmits <code>ItemPriceRemoved</code> on success if the price is <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.buy_item\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">buy_item</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    bid_price: &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Allows to buy an item if it’s up for sale.</p>\n<p>Origin must be Signed and must not be the owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item the sender wants to buy.</li>\n<li><code>bid_price</code>: The price the sender is willing to pay.</li>\n</ul>\n<p>Emits <code>ItemBought</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pay_tips\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pay_tips</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    tips: BoundedVec&lt;ItemTip&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &lt;T as Config&lt;I&gt;&gt;::MaxTips&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Allows to pay the tips.</p>\n<p>Origin must be Signed.</p>\n<ul>\n<li><code>tips</code>: Tips array.</li>\n</ul>\n<p>Emits <code>TipSent</code> on every tip transfer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    offered_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    offered_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    desired_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    maybe_desired_item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::ItemId&gt;,\n    maybe_price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PriceWithDirection&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;,\n    duration: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Register a new atomic swap, declaring an intention to send an <code>item</code> in exchange for\n<code>desired_item</code> from origin to target on the current blockchain.\nThe target can execute the swap during the specified <code>duration</code> of blocks (if set).\nAdditionally, the price could be set for the desired <code>item</code>.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item an owner wants to give.</li>\n<li><code>desired_collection</code>: The collection of the desired item.</li>\n<li><code>desired_item</code>: The desired item an owner wants to receive.</li>\n<li><code>maybe_price</code>: The price an owner is willing to pay or receive for the desired <code>item</code>.</li>\n<li><code>duration</code>: A deadline for the swap. Specified by providing the number of blocks\nafter which the swap will expire.</li>\n</ul>\n<p>Emits <code>SwapCreated</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    offered_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    offered_item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel an atomic swap.</p>\n<p>Origin must be Signed.\nOrigin must be an owner of the <code>item</code> if the deadline hasn’t expired.</p>\n<ul>\n<li><code>collection</code>: The collection of the item.</li>\n<li><code>item</code>: The item an owner wants to give.</li>\n</ul>\n<p>Emits <code>SwapCancelled</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">claim_swap</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    send_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    send_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    receive_collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    receive_item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    witness_price: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PriceWithDirection&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Claim an atomic swap.\nThis method executes a pending swap, that was created by a counterpart before.</p>\n<p>Origin must be Signed and must be an owner of the <code>item</code>.</p>\n<ul>\n<li><code>send_collection</code>: The collection of the item to be sent.</li>\n<li><code>send_item</code>: The item to be sent.</li>\n<li><code>receive_collection</code>: The collection of the item to be received.</li>\n<li><code>receive_item</code>: The item to be received.</li>\n<li><code>witness_price</code>: A price that was previously agreed on.</li>\n</ul>\n<p>Emits <code>SwapClaimed</code> on success.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint_pre_signed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mint_pre_signed</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    mint_data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;PreSignedMint&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt;,\n    signature: &lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint an item by providing the pre-signed approval.</p>\n<p>Origin must be Signed.</p>\n<ul>\n<li><code>mint_data</code>: The pre-signed approval that consists of the information about the item,\nits metadata, attributes, who can mint it (<code>None</code> for anyone) and until what block\nnumber.</li>\n<li><code>signature</code>: The signature of the <code>data</code> object.</li>\n<li><code>signer</code>: The <code>data</code> object’s signer. Should be an Issuer of the collection.</li>\n</ul>\n<p>Emits <code>Issued</code> on success.\nEmits <code>AttributeSet</code> if the attributes were provided.\nEmits <code>ItemMetadataSet</code> if the metadata was not empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_attributes_pre_signed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_attributes_pre_signed</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    data: PreSignedAttributes&lt;&lt;T as Config&lt;I&gt;&gt;::CollectionId, &lt;T as Config&lt;I&gt;&gt;::ItemId, &lt;T as Config&gt;::AccountId, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    signature: &lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set attributes for an item by providing the pre-signed approval.</p>\n<p>Origin must be Signed and must be an owner of the <code>data.item</code>.</p>\n<ul>\n<li><code>data</code>: The pre-signed approval that consists of the information about the item,\nattributes to update and until what block number.</li>\n<li><code>signature</code>: The signature of the <code>data</code> object.</li>\n<li><code>signer</code>: The <code>data</code> object’s signer. Should be an Admin of the collection for the\n<code>CollectionOwner</code> namespace.</li>\n</ul>\n<p>Emits <code>AttributeSet</code> for each provided attribute.\nEmits <code>ItemAttributesApprovalAdded</code> if the approval wasn’t set before.\nEmits <code>PreSignedAttributesSet</code> on success.</p>\n</div></details></div></details>",0,"asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_create_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_create_collection</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    owner: &lt;T as Config&gt;::AccountId,\n    admin: &lt;T as Config&gt;::AccountId,\n    config: CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;,\n    deposit: &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    event: Event&lt;T, I&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new collection with the given <code>collection</code>, <code>owner</code>, <code>admin</code>, <code>config</code>, <code>deposit</code>,\nand <code>event</code>.</p>\n<p>This function creates a new collection with the provided parameters. It reserves the\nrequired deposit from the owner’s account, sets the collection details, assigns admin roles,\nand inserts the provided configuration. Finally, it emits the specified event upon success.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a <a href=\"crate::Error::CollectionIdInUse\"><code>CollectionIdInUse</code></a> error if the\ncollection ID is already in use.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_destroy_collection\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_destroy_collection</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    witness: DestroyWitness,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DestroyWitness, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy the specified collection with the given <code>collection</code>, <code>witness</code>, and\n<code>maybe_check_owner</code>.</p>\n<p>This function destroys the specified collection if it exists and meets the necessary\nconditions. It checks the provided <code>witness</code> against the actual collection details and\nremoves the collection along with its associated metadata, attributes, and configurations.\nThe necessary deposits are returned to the corresponding accounts, and the roles and\nconfigurations for the collection are cleared. Finally, it emits the <code>Destroyed</code> event upon\nsuccessful destruction.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is not found\n(<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the provided <code>maybe_check_owner</code> does not match the actual owner\n(<a href=\"crate::Error::NoPermission\"><code>NoPermission</code></a>).</li>\n<li>If the collection is not empty (contains items)\n(<a href=\"crate::Error::CollectionNotEmpty\"><code>CollectionNotEmpty</code></a>).</li>\n<li>If the <code>witness</code> does not match the actual collection details\n(<a href=\"crate::Error::BadWitness\"><code>BadWitness</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_mint</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    maybe_depositor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n    mint_to: &lt;T as Config&gt;::AccountId,\n    item_config: ItemConfig,\n    with_details_and_config: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;CollectionDetails&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &amp;CollectionConfig&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&lt;I&gt;&gt;::CollectionId&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint a new unique item with the given <code>collection</code>, <code>item</code>, and other minting configuration\ndetails.</p>\n<p>This function performs the minting of a new unique item. It checks if the item does not\nalready exist in the given collection, and if the max supply limit (if configured) is not\nreached. It also reserves the required deposit for the item and sets the item details\naccordingly.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item already exists in the collection\n(<a href=\"crate::Error::AlreadyExists\"><code>AlreadyExists</code></a>).</li>\n<li>If the item configuration already exists\n(<a href=\"crate::Error::InconsistentItemConfig\"><code>InconsistentItemConfig</code></a>).</li>\n<li>If the max supply limit (if configured) for the collection is reached\n(<a href=\"crate::Error::MaxSupplyReached\"><code>MaxSupplyReached</code></a>).</li>\n<li>If any error occurs in the <code>with_details_and_config</code> closure.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_burn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_burn</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    with_details: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;ItemDetails&lt;&lt;T as Config&gt;::AccountId, ItemDeposit&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;T as Config&gt;::AccountId&gt;, BoundedBTreeMap&lt;&lt;T as Config&gt;::AccountId, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;, &lt;T as Config&lt;I&gt;&gt;::ApprovalsLimit&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Burns the specified item with the given <code>collection</code>, <code>item</code>, and <code>with_details</code>.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item is locked (<a href=\"crate::Error::ItemLocked\"><code>ItemLocked</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_transfer</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId,\n    dest: &lt;T as Config&gt;::AccountId,\n    with_details: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;CollectionDetails&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, &amp;mut ItemDetails&lt;&lt;T as Config&gt;::AccountId, ItemDeposit&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;T as Config&gt;::AccountId&gt;, BoundedBTreeMap&lt;&lt;T as Config&gt;::AccountId, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;, &lt;T as Config&lt;I&gt;&gt;::ApprovalsLimit&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer an NFT to the specified destination account.</p>\n<ul>\n<li><code>collection</code>: The ID of the collection to which the NFT belongs.</li>\n<li><code>item</code>: The ID of the NFT to transfer.</li>\n<li><code>dest</code>: The destination account to which the NFT will be transferred.</li>\n<li><code>with_details</code>: A closure that provides access to the collection and item details,\nallowing customization of the transfer process.</li>\n</ul>\n<p>This function performs the actual transfer of an NFT to the destination account.\nIt checks various conditions like item lock status and transferability settings\nfor the collection and item before transferring the NFT.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a dispatch error in the following cases:</p>\n<ul>\n<li>If the collection ID is invalid (<a href=\"crate::Error::UnknownCollection\"><code>UnknownCollection</code></a>).</li>\n<li>If the item ID is invalid (<a href=\"crate::Error::UnknownItem\"><code>UnknownItem</code></a>).</li>\n<li>If the item is locked or transferring it is disabled\n(<a href=\"crate::Error::ItemLocked\"><code>ItemLocked</code></a>).</li>\n<li>If the collection or item is non-transferable\n(<a href=\"crate::Error::ItemsNonTransferable\"><code>ItemsNonTransferable</code></a>).</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.group_roles_by_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">group_roles_by_account</a>(\n    input: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;T as Config&gt;::AccountId, CollectionRole)&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;T as Config&gt;::AccountId, CollectionRoles)&gt;</h4></section></summary><div class=\"docblock\"><p>Groups provided roles by account, given one account could have multiple roles.</p>\n<ul>\n<li><code>input</code>: A vector of (Account, Role) tuples.</li>\n</ul>\n<p>Returns a grouped vector of <code>(Account, Roles)</code> tuples.</p>\n</div></details></div></details>",0,"asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">owner</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId,\n    item: &lt;T as Config&lt;I&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class=\"docblock\"><p>Get the owner of the item, if the item exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collection_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">collection_owner</a>(\n    collection: &lt;T as Config&lt;I&gt;&gt;::CollectionId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class=\"docblock\"><p>Get the owner of the collection, if the collection exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_signature\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">validate_signature</a>(\n    data: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;,\n    signature: &amp;&lt;T as Config&lt;I&gt;&gt;::OffchainSignature,\n    signer: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Validates the signature of the given data with the provided signer’s account ID.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function returns a <a href=\"crate::Error::WrongSignature\"><code>WrongSignature</code></a> error if the\nsignature is invalid or the verification process fails.</p>\n</div></details></div></details>",0,"asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletsInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T, I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StorageInfoTrait for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transfer%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Transfer%3C%3CT+as+Config%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Transfer&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId,\n    destination: &amp;&lt;T as Config&gt;::AccountId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Transfer <code>item</code> of <code>collection</code> into <code>destination</code> account.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.disable_transfer\" class=\"method trait-impl\"><a href=\"#method.disable_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">disable_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Disable the <code>item</code> of <code>collection</code> transfer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enable_transfer\" class=\"method trait-impl\"><a href=\"#method.enable_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enable_transfer</a>(\n    collection: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::CollectionId,\n    item: &amp;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::ItemId\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Re-enable the <code>item</code> of <code>collection</code> transfer. <a>Read more</a></div></details></div></details>","Transfer<<T as Config>::AccountId>","asset_hub_westend_runtime::Nfts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; WhitelistedStorageKeys for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","asset_hub_westend_runtime::Nfts"],["<section id=\"impl-Eq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T, I&gt;</h3></section>","Eq","asset_hub_westend_runtime::Nfts"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()