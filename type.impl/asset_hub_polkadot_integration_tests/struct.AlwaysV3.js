(function() {var type_impls = {
"asset_hub_polkadot_integration_tests":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-AlwaysV3\" class=\"impl\"><a href=\"#impl-WrapVersion-for-AlwaysV3\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"asset_hub_polkadot_integration_tests/trait.WrapVersion.html\" title=\"trait asset_hub_polkadot_integration_tests::WrapVersion\">WrapVersion</a> for <a class=\"struct\" href=\"asset_hub_polkadot_integration_tests/struct.AlwaysV3.html\" title=\"struct asset_hub_polkadot_integration_tests::AlwaysV3\">AlwaysV3</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"asset_hub_polkadot_integration_tests/trait.WrapVersion.html#tymethod.wrap_version\" class=\"fn\">wrap_version</a>&lt;Call&gt;(\n    _: &amp;<a class=\"struct\" href=\"asset_hub_polkadot_integration_tests/struct.MultiLocation.html\" title=\"struct asset_hub_polkadot_integration_tests::MultiLocation\">MultiLocation</a>,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"asset_hub_polkadot_integration_tests/enum.VersionedXcm.html\" title=\"enum asset_hub_polkadot_integration_tests::VersionedXcm\">VersionedXcm</a>&lt;Call&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"asset_hub_polkadot_integration_tests/enum.VersionedXcm.html\" title=\"enum asset_hub_polkadot_integration_tests::VersionedXcm\">VersionedXcm</a>&lt;Call&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","asset_hub_polkadot_integration_tests::AlwaysLatest","asset_hub_polkadot_integration_tests::AlwaysLts"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()