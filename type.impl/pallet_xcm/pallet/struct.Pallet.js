(function() {var type_impls = {
"asset_hub_kusama_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","asset_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","asset_hub_kusama_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","asset_hub_kusama_runtime::PolkadotXcm"]],
"asset_hub_polkadot_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","asset_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","asset_hub_polkadot_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","asset_hub_polkadot_runtime::PolkadotXcm"]],
"asset_hub_westend_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","asset_hub_westend_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","asset_hub_westend_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","asset_hub_westend_runtime::PolkadotXcm"]],
"bridge_hub_kusama_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","bridge_hub_kusama_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","bridge_hub_kusama_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","bridge_hub_kusama_runtime::PolkadotXcm"]],
"bridge_hub_polkadot_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","bridge_hub_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","bridge_hub_polkadot_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","bridge_hub_polkadot_runtime::PolkadotXcm"]],
"bridge_hub_rococo_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","bridge_hub_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","bridge_hub_rococo_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","bridge_hub_rococo_runtime::PolkadotXcm"]],
"collectives_polkadot_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","collectives_polkadot_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","collectives_polkadot_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","collectives_polkadot_runtime::PolkadotXcm"]],
"contracts_rococo_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","contracts_rococo_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","contracts_rococo_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","contracts_rococo_runtime::PolkadotXcm"]],
"parachain_template_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","parachain_template_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","parachain_template_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","parachain_template_runtime::PolkadotXcm"]],
"penpal_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: Weight,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; Weight</h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: Weight\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: Weight,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","penpal_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","penpal_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","penpal_runtime::PolkadotXcm"]],
"rococo_parachain_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssetLock-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-AssetLock-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; AssetLock for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LockTicket</a> = LockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_lock</code>. This type may be dropped safely to avoid doing the\nlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UnlockTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UnlockTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UnlockTicket</a> = UnlockTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be dropped safely to avoid doing the\nunlock.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ReduceTicket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReduceTicket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ReduceTicket</a> = ReduceTicket&lt;T&gt;</h4></section></summary><div class='docblock'><code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type may be dropped safely to\navoid doing the unlock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_lock\" class=\"method trait-impl\"><a href=\"#method.prepare_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_lock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to lock an asset. On success, a <code>Self::LockTicket</code> it returned, which can be used\nto actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_unlock\" class=\"method trait-impl\"><a href=\"#method.prepare_unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_unlock</a>(\n    unlocker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UnlockTicket&lt;T&gt;, LockError&gt;</h4></section></summary><div class='docblock'>Prepare to unlock an asset. On success, a <code>Self::UnlockTicket</code> it returned, which can be\nused to actually enact the lock. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_unlockable\" class=\"method trait-impl\"><a href=\"#method.note_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">note_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when a location reports to us that an asset has been locked for us to unlock\nat a later stage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_reduce_unlockable\" class=\"method trait-impl\"><a href=\"#method.prepare_reduce_unlockable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_reduce_unlockable</a>(\n    locker: MultiLocation,\n    asset: MultiAsset,\n    owner: MultiLocation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as AssetLock&gt;::ReduceTicket, LockError&gt;</h4></section></summary><div class='docblock'>Handler for when an owner wishes to unlock an asset on a remote chain. <a>Read more</a></div></details></div></details>","AssetLock","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-CheckSuspension-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CheckSuspension for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_suspended\" class=\"method trait-impl\"><a href=\"#method.is_suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_suspended</a>&lt;Call&gt;(\n    _origin: &amp;MultiLocation,\n    _instructions: &amp;mut [Instruction&lt;Call&gt;],\n    _max_weight: <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a>,\n    _properties: &amp;mut Properties\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CheckSuspension","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ClaimAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ClaimAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_assets\" class=\"method trait-impl\"><a href=\"#method.claim_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">claim_assets</a>(\n    origin: &amp;MultiLocation,\n    ticket: &amp;MultiLocation,\n    assets: &amp;MultiAssets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Claim any assets available to <code>origin</code> and return them in a single <code>Assets</code> value, together\nwith the weight used by this operation.</div></details></div></details>","ClaimAssets","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DropAssets-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DropAssets-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DropAssets for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_assets\" class=\"method trait-impl\"><a href=\"#method.drop_assets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop_assets</a>(\n    origin: &amp;MultiLocation,\n    assets: Assets,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class='docblock'>Handler for receiving dropped assets. Returns the weight consumed by this operation.</div></details></div></details>","DropAssets","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">CurrentStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::CurrentStorageVersion</h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a>) -&gt; <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by FRAME. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main wasm runtime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a>\n) -&gt; <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+HeaderT%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnResponse-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnResponse-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnResponse for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expecting_response\" class=\"method trait-impl\"><a href=\"#method.expecting_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">expecting_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if we are expecting a response from <code>origin</code> for query <code>query_id</code> that was\nqueried by <code>querier</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_response\" class=\"method trait-impl\"><a href=\"#method.on_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_response</a>(\n    origin: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    querier: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;MultiLocation&gt;,\n    response: Response,\n    max_weight: <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a>,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class='docblock'>Handler for receiving a <code>response</code> from <code>origin</code> relating to <code>query_id</code> initiated by\n<code>querier</code>.</div></details></div></details>","OnResponse","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_trap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">asset_trap</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    KArg: EncodeLike&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The existing asset traps.“\n“”\n“ Key is the blake2 256 hash of (origin, versioned <code>MultiAssets</code>) pair. Value is the number of“\n“ times this pair has been trapped (usually just 1 if it exists at all).“</p>\n</div></details></div></details>",0,"rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>&lt;KArg&gt;(\n    k: KArg\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;QueryStatus&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>“ The ongoing queries.“</p>\n</div></details></div></details>",0,"rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> informs us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequest_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequest_version_notify</a>(\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Request that <code>dest</code> ceases informing us of its version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_xcm\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send_xcm</a>(\n    interior: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Junctions&gt;,\n    dest: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    message: Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class=\"docblock\"><p>Relay an XCM <code>message</code> from a given <code>interior</code> location in this context to a given <code>dest</code>\nlocation. The <code>fee_payer</code> is charged for the delivery unless <code>None</code> in which case fees\nare not charged (and instead borne by the chain).</p>\n</div></details><section id=\"method.check_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_account</a>() -&gt; &lt;T as Config&gt;::AccountId</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">report_outcome_notify</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Consume <code>message</code> and return another which is equivalent to it except that it reports\nback the outcome and dispatches <code>notify</code> on this chain.</p>\n<ul>\n<li><code>message</code>: The message whose outcome should be reported.</li>\n<li><code>responder</code>: The origin from which a response should be expected.</li>\n<li><code>notify</code>: A dispatchable function which will be called once the outcome of <code>message</code> is\nknown. It may be a dispatchable in any pallet of the local chain, but other than the usual\norigin, it must accept exactly two arguments: <code>query_id: QueryId</code> and <code>outcome: Response</code>,\nand in that order. It should expect that the origin is <code>Origin::Response</code> and will contain\nthe responder’s location.</li>\n<li><code>timeout</code>: The block number after which it is permissible for <code>notify</code> not to be called\neven if a response is received.</li>\n</ul>\n<p><code>report_outcome_notify</code> may return an error if the <code>responder</code> is not invertible.</p>\n<p>It is assumed that the querier of the response will be <code>Here</code>.</p>\n<p>NOTE: <code>notify</code> gets called as part of handling an incoming message, so it should be\nlightweight. Its weight is estimated during this function and stored ready for\nweighing <code>ReportOutcome</code> on the way back. If it turns out to be heavier once it returns\nthen reporting the outcome will fail. Futhermore if the estimate is too high, then it\nmay be put in the overweight queue and need to be manually executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_notify_query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_notify_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    notify: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond, and\nwhich will call a dispatchable when a response happens.</p>\n</div></details></div></details>",0,"rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">send</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>. The weight limit for fees is not provided and thus is unlimited,\nwith all fees taken as needed from the asset.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    message: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedXcm&lt;&lt;T as Config&gt;::RuntimeCall&gt;&gt;,\n    max_weight: <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Execute an XCM message from a local, signed, origin.</p>\n<p>An event is deposited indicating whether <code>msg</code> could be executed completely or only\npartially.</p>\n<p>No more than <code>max_weight</code> will be used in its attempted execution. If this is less than\nthe maximum amount of weight that the message could take to be executed, then no\nexecution attempt will be made.</p>\n<p>NOTE: A successful return to this does <em>not</em> imply that the <code>msg</code> was executed\nsuccessfully to completion; only that <em>some</em> of it was executed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;MultiLocation&gt;,\n    version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Extoll that a particular destination can be communicated with through a particular\nversion of XCM.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The destination that is being described.</li>\n<li><code>xcm_version</code>: The latest version of XCM that <code>location</code> supports.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_default_xcm_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_default_xcm_version</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_xcm_version: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a safe XCM version (the version that XCM should be encoded with if the most recent\nversion a destination can accept is unknown).</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>maybe_xcm_version</code>: The default XCM encoding version, or <code>None</code> to disable.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_subscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_subscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ask a location to notify us regarding their XCM version and any changes to it.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we should subscribe for XCM version notifications.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unsubscribe_version_notify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_unsubscribe_version_notify</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Require that a particular destination should no longer notify us regarding any XCM\nversion changes.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>location</code>: The location to which we are currently subscribed for XCM version\nnotifications which we no longer desire.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_reserve_transfer_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_reserve_transfer_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some assets from the local chain to the sovereign account of a destination\nchain and forward a notification XCM.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. This should include the assets used to pay the\nfee on the <code>dest</code> side.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limited_teleport_assets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limited_teleport_assets</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    beneficiary: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiLocation&gt;,\n    assets: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedMultiAssets&gt;,\n    fee_asset_item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>,\n    weight_limit: WeightLimit\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Teleport some assets from the local chain to some destination chain.</p>\n<p>Fee payment on the destination side is made from the asset in the <code>assets</code> vector of\nindex <code>fee_asset_item</code>, up to enough to pay for <code>weight_limit</code> of weight. If more weight\nis needed than <code>weight_limit</code>, then the operation will fail and the assets send may be\nat risk.</p>\n<ul>\n<li><code>origin</code>: Must be capable of withdrawing the <code>assets</code> and executing XCM.</li>\n<li><code>dest</code>: Destination context for the assets. Will typically be <code>X2(Parent, Parachain(..))</code> to send from parachain to parachain, or <code>X1(Parachain(..))</code> to send\nfrom relay to parachain.</li>\n<li><code>beneficiary</code>: A beneficiary location for the assets in the context of <code>dest</code>. Will\ngenerally be an <code>AccountId32</code> value.</li>\n<li><code>assets</code>: The assets to be withdrawn. The first item should be the currency used to to\npay the fee on the <code>dest</code> side. May not be empty.</li>\n<li><code>fee_asset_item</code>: The index into <code>assets</code> of the item which should be used to pay\nfees.</li>\n<li><code>weight_limit</code>: The remote-side weight limit, if any, for the XCM fee purchase.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_suspension\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_suspension</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    suspended: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set or unset the global suspension state of the XCM executor.</p>\n<ul>\n<li><code>origin</code>: Must be an origin specified by AdminOrigin.</li>\n<li><code>suspended</code>: <code>true</code> to suspend, <code>false</code> to resume.</li>\n</ul>\n</div></details></div></details>",0,"rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryHandler-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-QueryHandler-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; QueryHandler for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_query\" class=\"method trait-impl\"><a href=\"#method.new_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_query</a>(\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    match_querier: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;\n) -&gt; &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId</h4></section></summary><div class=\"docblock\"><p>Attempt to create a new query ID and register it as a query that is yet to respond.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_outcome\" class=\"method trait-impl\"><a href=\"#method.report_outcome\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_outcome</a>(\n    message: &amp;mut Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;,\n    responder: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;MultiLocation&gt;,\n    timeout: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId, &lt;Pallet&lt;T&gt; as QueryHandler&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>To check the status of the query, use <code>fn query()</code> passing the resultant <code>QueryId</code>\nvalue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_response\" class=\"method trait-impl\"><a href=\"#method.take_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_response</a>(\n    query_id: &lt;Pallet&lt;T&gt; as QueryHandler&gt;::QueryId\n) -&gt; QueryResponseStatus&lt;&lt;Pallet&lt;T&gt; as QueryHandler&gt;::BlockNumber&gt;</h4></section></summary><div class=\"docblock\"><p>Removes response when ready and emits [Event::ResponseTaken] event.</p>\n</div></details><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section><section id=\"associatedtype.UniversalLocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UniversalLocation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UniversalLocation</a> = &lt;T as Config&gt;::UniversalLocation</h4></section></div></details>","QueryHandler","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-VersionChangeNotifier-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; VersionChangeNotifier for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(\n    dest: &amp;MultiLocation,\n    query_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>,\n    max_weight: <a class=\"struct\" href=\"rococo_parachain_runtime/struct.Weight.html\" title=\"struct rococo_parachain_runtime::Weight\">Weight</a>,\n    _context: &amp;XcmContext\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Start notifying <code>location</code> should the XCM version of this chain change.</p>\n<p>When it does, this type should ensure a <code>QueryResponse</code> message is sent with the given\n<code>query_id</code> &amp; <code>max_weight</code> and with a <code>response</code> of <code>Response::Version</code>. This should happen\nuntil/unless <code>stop</code> is called with the correct <code>query_id</code>.</p>\n<p>If the <code>location</code> has an ongoing notification and when this function is called, then an\nerror should be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stop\" class=\"method trait-impl\"><a href=\"#method.stop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stop</a>(dest: &amp;MultiLocation, _context: &amp;XcmContext) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Stop notifying <code>location</code> should the XCM change. This is a no-op if there was never a\nsubscription.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subscribed\" class=\"method trait-impl\"><a href=\"#method.is_subscribed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_subscribed</a>(dest: &amp;MultiLocation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if a location is subscribed to XCM version changes.</p>\n</div></details></div></details>","VersionChangeNotifier","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","rococo_parachain_runtime::PolkadotXcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrapVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WrapVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WrapVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrap_version\" class=\"method trait-impl\"><a href=\"#method.wrap_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrap_version</a>&lt;RuntimeCall&gt;(\n    dest: &amp;MultiLocation,\n    xcm: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;VersionedXcm&lt;RuntimeCall&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VersionedXcm&lt;RuntimeCall&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","WrapVersion","rococo_parachain_runtime::PolkadotXcm"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","rococo_parachain_runtime::PolkadotXcm"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()