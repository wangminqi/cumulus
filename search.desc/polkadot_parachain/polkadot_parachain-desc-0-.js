searchState.loadedDescShard("polkadot_parachain", 0, "Cumulus test parachain collator\nParachain-specific RPCs implementation.\nGeneric extensions for Parachain ChainSpecs.\nThe default XCM version to set in genesis config.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHelper function to generate an account ID from seed\nGenerate collator keys from seed.\nHelper function to generate a crypto pair from seed\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe id of the Parachain.\nThe relay chain of the Parachain.\nChainSpecs dedicated to Rococo parachain setups (for …\nTry to get the extension from the given <code>ChainSpec</code>.\nSpecialized <code>ChainSpec</code> for the normal parachain runtime.\nGenerate the session keys from individual elements.\nGenerate the session keys from individual elements.\nGenerate the session keys from individual elements.\nCollects all supported BridgeHub configurations\nCheck if ‘id’ satisfy BridgeHub-like format\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSub-module for Kusama setup\nSub-module for Polkadot setup\nSub-module for Rococo setup\nSub-module for Westend setup (uses Kusama runtime)\nSub-module for Wococo setup (reuses stuff from Rococo)\nSpecialized <code>ChainSpec</code> for the normal parachain runtime.\nSpecialized <code>ChainSpec</code> for the normal parachain runtime.\nSpecialized <code>ChainSpec</code> for the normal parachain runtime.\nCollectives Polkadot Local Config.\nGenerate the session keys from individual elements.\nNo relay chain suffix because the id is the same over all …\nThe existential deposit is determined by the runtime “…\nSpecialized <code>ChainSpec</code> for the Glutton parachain runtime.\nSpecialized <code>ChainSpec</code> for the normal parachain runtime.\nGenerate the session keys from individual elements.\nSpecialized <code>ChainSpec</code> for the seedling parachain runtime.\nSpecialized <code>ChainSpec</code> for the shell parachain runtime.\nSub-commands concerned with benchmarking. The pallet …\nBuild a chain specification.\nValidate blocks.\nExport blocks.\nExport the genesis state of the parachain.\nExport the genesis wasm of the parachain.\nExport the state of a given block into a chain spec.\nImport blocks.\nKey management CLI utilities\nRemove the whole chain.\nRevert the chain to a previous state.\nSub-commands supported by the collator.\nTry-runtime has migrated to a standalone CLI. The …\nThe actual relay chain cli object.\nThe base path that should be used by the relay chain.\nOptional chain id that should be passed to the relay chain.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParse the relay chain CLI parameters using the para chain …\nDisable automatic hardware benchmarks.\nRelay chain arguments\nThis is the default runtime (actually based on rococo)\nHelper enum that is used for better distinction of …\nCreates partial components for the runtimes that are …\nExtracts the normalized chain id and parachain id from the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nParse command line arguments into service configuration.\nSignifies whether a potentially unsafe RPC should be …\nFull client dependencies\nAllows calling every RPCs.\nA type representing all RPC extensions.\nTask executor that is being used by RPC subscriptions.\nDenies only potentially unsafe RPCs.\nReturns <code>Ok(())</code> if the RPCs considered unsafe are safe to …\nThe client instance to use.\nInstantiate all RPCs we want at the contracts-rococo chain.\nInstantiate all RPC extensions.\nWhether to deny unsafe calls\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTransaction pool instance.\nSome way of identifying an account on the chain. We …\nNative Asset Hub Kusama (Statemine) executor instance.\nNative Asset Hub Polkadot (Statemint) executor instance.\nNative Asset Hub Westend (Westmint) executor instance.\nBalance of an account.\nOpaque block type.\nAn index to a block.\nNative BridgeHubKusama executor instance.\nNative BridgeHubPolkadot executor instance.\nNative BridgeHubRococo executor instance.\nNative Polkadot Collectives executor instance.\nNative contracts executor instance.\nNative Glutton executor instance.\nA hash of some data used by the chain.\nOpaque block header type.\nIndex of a transaction in the chain.\nNative executor instance.\nSpecial <code>ParachainConsensus</code> implementation that waits for …\nBuild the import queue for Aura-based runtimes.\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe block header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStarts a <code>ServiceBuilder</code> for a full service.\nThe block number.\nThe parent hash.\nBuild the import queue for the rococo parachain runtime.\nBuild the import queue for the shell runtime.\nStart a parachain node.\nStart an aura powered parachain node. Asset Hub and …\nStart a node with the given parachain <code>Configuration</code> and …\nStart a rococo parachain node.\nStart a polkadot-shell parachain node.\nStart a shell node with the given parachain <code>Configuration</code> …\nThe state trie merkle root\nChecks that the hardware meets the requirements and print …")