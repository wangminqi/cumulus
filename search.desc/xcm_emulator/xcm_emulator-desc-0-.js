searchState.loadedDescShard("xcm_emulator", 0, "An abstract location; this is a name which may mean …\nAll balance information for an account.\nData to be associated with an account (other than …\nSome way of identifying an account on the chain. We …\nThe user account identifier type for the runtime.\nThe AccountId used across the system.\nAn opaque 32-byte cryptographic identifier.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nInformation of an account.\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAggregate message origin for the <code>MessageQueue</code> pallet.\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nClassification of an asset being concrete or abstract.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nSome assets.\nNo less than the given proportion of members of the body.\nBridged messages, each message is: <code>BridgeMessage</code>\nThe message data format is unknown (e.g. unrecognised …\nThe Origin Register does not contain a valid value for …\nBalance of an account.\nThe balance of an account.\nThe XCM did not pass the barrier condition for execution.\nThe basic call filter to use in Origin. All origins are …\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nThe Block type used by the runtime. This is used by …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nAn index to a block.\nBlock &amp; extrinsics weights: base values and limits.\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nNumbers which have upper and lower bounds\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nRuntime call type, as in <code>frame_system::Config::Call</code>\nInformation on the avaialble XCMP channels.\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nA specific location identifying an asset.\nA Condition Variable\nThe origin that is allowed to resume or suspend the XCMP …\nThe conversion function used to attempt to convert an XCM …\nMeans of converting a location into an account identifier.\nThe message data is bad (e.g. decoding returns an error).\nAbstraction over a fungible assets system.\nDownward messages that already processed by parachains, …\nDownward messages, each message is: …\nThe weight of runtime database operations the runtime can …\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> and for struct and enum.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nUsed for immutable dereferencing operations, like <code>*v</code>.\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThis is the legacy return type of <code>Dispatchable</code>. It is …\nThe status of a dispatch attempt using <code>Transact</code>.\nSomething that should be called when a downward message is …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nA marker trait that tells the compiler that a type encode …\nCan enqueue messages for multiple origins.\nContains the error value\nContains the error value\nContains the error value\n<code>Error</code> is a trait representing the basic expectations for …\nExecution did not start due to the given error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nThe origin that is allowed to execute overweight messages.\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA trait for querying a single value from a type.\nA global network capable of externalizing its own …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nHorizontal messages, each message is: …\nThe output of the <code>Hashing</code> function.\nA hash map implemented with quadratic probing and SIMD …\nThe hashing system (algorithm) being used in the runtime …\nParachain head data included in the chain.\nThe size of the page; this implies the maximum message …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nThe pallet hooks trait. This is merely an umbrella trait …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nFlag indicating if global variables have been initialized …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nMost recent <code>HeadData</code> of each parachain, encoded.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nA thread local storage key which owns its contents.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nConverting trait to take a source type and convert to …\nThe maximal weight in all dimensions.\nThe maximum number of consumers allowed on a single …\nThe maximal length any enqueued message may have.\nThe maximum number of stale pages (i.e. of overweight …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nProcessor for a message.\nConfiguration trait of this pallet.\nThe <code>Event</code> enum of this pallet\nThe <code>Pallet</code> struct, the main type that implements traits …\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than than the given proportion of members of the body.\nEither an amount of a single fungible asset, or a single …\n<code>MultiAsset</code> collection, defined either by a number of …\nA <code>Vec</code> of <code>MultiAsset</code>s.\nA relative path between state-bearing consensus systems.\nA mutual exclusion primitive useful for protecting shared …\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nThe opaque token type for an imbalance. This is returned …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThis stores the number of previous transactions associated …\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nContains the success value\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nThe unambiguous child.\nThe transport from where a message originates.\nBasically just the XCM (more general) version of …\nMethods available on <code>frame_system::Config::RuntimeOrigin</code>.\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nMessage processing was not attempted because it was not …\nMessage placed in overweight queue.\nAddresses a specific overweight message.\nParachains Ids a the Network\nThis page was reaped.\nTrait suitable for typical cryptographic PKI key pair type.\nProvides information about the pallet setup in the runtime.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nThe caller origin, overarching type of all pallets origins.\nThe message originated from this parachain.\nUnique identifier of a parachain.\nAn indexed parachain belonging to and operated by the …\nThe inherent data that is passed by the collator to the …\nThe <code>Pallet</code> struct, the main type that implements traits …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA tuple struct which can be converted into a <code>MultiLocation</code> …\nThe validation data provides information about how to …\nZero-sized type used to mark things that “act like” …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe opaque token type for an imbalance. This is returned …\nThe price for delivering an XCM to a sibling parachain …\nCan process messages from a specific origin.\nErrors that can happen when attempting to process a …\nMessage is processed.\nMessage discarded due to an error in the <code>MessageProcessor</code> …\nThe type which is used to encode a public key.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\nCode to be called when a message queue changes - either …\nQueried by the pallet to check whether a queue can be …\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nA mutable memory location with dynamically checked borrow …\nRefund any surplus weight previously bought with …\nThe block number type used by Polkadot. 32-bits will allow …\nBuilds a sproof (portmanteau of ‘spoof’ and ‘proof’…\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nThe aggregated <code>RuntimeCall</code> type.\nThe overarching event type.\nThe aggregated event type of the runtime.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe designated SS58 prefix of this chain.\nThe type used to (minimally) encode the data required to …\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nCan service queues and execute overweight messages.\nThe amount of weight (if any) which should be provided to …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nThe type used to represent a signature. Can be created …\nPage/heap size type.\nOrigin should just be the standard account-based origin …\nStruct containing data needed for a storage.\nHasher to use to hash keys to insert to storage.\nA proof that some set of key-value pairs are included in …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nConfiguration trait of this pallet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe resulting type after dereferencing.\nThe unambiguous technical body (for Polkadot, this would …\nStruct that help with tests where either dispatchables or …\nStruct that keeps account’s id and balance\nDefault <code>Args</code> provided by xcm-emulator to be stored in a …\nAuxiliar struct to help creating a new <code>Test</code> instance\nType alias for Externalities implementation used in tests.\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nUpward messages, each message is: <code>(from_para_id, msg)</code>\nInbound upward message.\nIdentifies a UMP queue inside the <code>MessageQueue</code> pallet.\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nThe message format is unsupported (e.g. old XCM version).\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nA double-ended queue implemented with a growable ring …\nAn XCM version.\nGet the chain’s current version.\nThe given pallet’s version has an incompatible version …\nMeans of converting an <code>Xcm</code> into a <code>VersionedXcm</code>.\nA single <code>MultiAssets</code> value, together with its version code.\nA single <code>MultiLocation</code> value, together with its version …\nThe body’s declaration, under whatever means it decides.\nThe weight information of this pallet.\nWeight information for extrinsics in this pallet.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nMeters consumed weight and a hard limit for the maximal …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildMultiAsset</code> wildcard.\nClassification of whether an asset is fungible or not.\nA wildcard representing a set of assets.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nSomething to execute an XCM message. We need this to …\nA hash type for identifying messages.\nSomething that should be called for each batch of messages …\nConfiguration trait of this pallet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe queue wants to give up its current processing slot.\nAn auto-generated getter for <code>Account</code>.\nRetrieve the account transaction counter from storage.\nThe total amount of issuance in the system excluding those …\nAdd a filter to the origin.\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns a reference to the underlying allocator.\nTrue if the account has no outstanding references.\nCreates a new <code>MultiLocation</code> with <code>parents</code> and an empty (<code>Here</code>…\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nConsume <code>self</code> and return its value suffixed with <code>suffix</code>.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nReturns a mutable raw pointer to the value.\nReturns a pair of slices which contain, in order, the …\nReturns a constant raw pointer to the value.\nReturns a raw pointer to the underlying data in this cell.\nExtract the signer from the message if it is a <code>Signed</code> …\nReturns a pair of slices which contain, in order, the …\nExtract a reference to the sytsem origin, if that’s what …\nExecutes all dispatchables and assertions in order from …\nAssert the given <code>event</code> exists.\nAssert the last event equal to the given <code>event</code>.\nPanic if an expression doesn’t evaluate to <code>Ok</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a mutable reference to the back element, or <code>None</code> …\nStorage backend.\nBinary searches this <code>VecDeque</code> for a given element. If the …\nBinary searches this <code>VecDeque</code> with a comparator function.\nBinary searches this <code>VecDeque</code> with a key extraction …\nAn auto-generated getter for <code>BlockHash</code>.\n“ The current block number being processed. Set by …\n“ The current weight for the block.“\nImmutably borrows the wrapped value.\nMutably borrows the wrapped value.\nReduce the total issuance by <code>amount</code> and return the …\nGet a reference to the caller (<code>CallerTrait</code> impl).\nCheck if the given weight can be consumed.\nTrue if the account has at least one provider reference …\nCheck if the given weight can be consumed.\nTrue if the account has no outstanding consumer references …\nTrue if the account has at least one provider reference …\nDetermine whether or not it is possible to update the code.\nSame result as <code>slash(who, value)</code> (but without the …\nReturns the number of elements the map can hold without …\nReturns the number of elements the deque can hold without …\nDeduct some <code>fees</code> to the sovereign account of the given …\nConsume the given weight after checking that it can be …\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked <code>Weight</code> scalar division. Computes …\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\nChildren trie storage data. Key does not include prefix, …\nClears the map, removing all key-value pairs. Keeps the …\nClears the deque, removing all values.\nClear the poisoned state from a mutex.\nPanics\nOverwrites the contents of <code>self</code> with a clone of the …\nPanics\nPanics\nReturns the <code>CollationInfo</code> of the current active block.\nConsume some weight and defensively fail if it is over the …\nThe already consumed weight.\nThe ratio of consumed weight to the limit.\nThe number of outstanding references for the account <code>who</code>.\nThe number of other modules that currently depend on this …\nReturns <code>true</code> if the deque contains an element equal to the …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns <code>true</code> if the map contains a value for the specified …\nReturns boolean indicating whether <code>self</code> contains only the …\nConvert the <code>location</code> into <code>Some</code> account ID, or <code>None</code> if not …\nMaximum count of assets allowed to match, if any.\nMaximum count of assets it is possible to match, if known.\nConsume self and return the equivalent version but counted …\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nCreate the <code>ParachainInherentData</code> at the given <code>relay_parent</code>.\nThe additional data that belongs to this account. Used to …\nReduce the active issuance by some amount.\nPrint the pages in each queue and the messages in each …\nDecrement the reference counter on an account. This <em>MUST</em> …\nDecrements the parent count by 1.\nDecrement the provider reference counter on an account.\nDecrement the reference counter on an account. This <em>MUST</em> …\nDecrement the sufficients reference counter on an account.\nAttempt to deserialise the value from input.\nAttempt to deserialize the value from input into a …\nCreates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value …\nCreates an empty deque.\nCreates a <code>RefCell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates a <code>Condvar</code> which is ready to be waited on and …\nCreates a <code>Mutex&lt;T&gt;</code>, with the <code>Default</code> value for T.\nConsume some weight and defensively fail if it is over the …\nActually carry out the delivery operation for a previously …\nAdds up to <code>value</code> to the free balance of <code>who</code>. If <code>who</code> doesn…\nDeposits an event into this block’s event record.\nDeposits an event into this block’s event record adding …\nMints <code>value</code> to the free balance of <code>who</code>.\nDeposits a log and ensures it matches the block’s log …\nDereferences the value.\nDerive a child key from a series of given junctions.\nThe destination to which the query response message should …\n“ Digest of the current block, also part of the block …\nConstant version of Div with u64.\nTo prevent Out of Memory errors on the <code>DownwardMessageQueue</code>…\nTry to execute a single message that was marked as …\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the inner value if it is of type …\nForwards to the method defined on the type <code>dyn Error</code>.\nDownward messages in the order they were sent.\nClears the map, returning all key-value pairs as an …\nRemoves the specified range from the deque in bulk, …\nConsume <code>self</code> and return the inner vec.\nReturns a new empty proof.\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nConvert self to an owned vector.\nConvert self to a slice and append it to the destination.\nReturns the estimated encoded size of the compact proof.\nReturns the fixed encoded size of the type.\nCalculates the encoded size.\nEnqueue a single <code>message</code> from a specific <code>origin</code>.\nEnqueue multiple <code>messages</code> from a specific <code>origin</code>.\nReturns <code>Ok</code> iff the account is able to make a withdrawal of …\nGets the given key’s corresponding entry in the map for …\nPanics\n“ The number of events in the <code>Events&lt;T&gt;</code> list.“\nGet a single event at specified index.\n“ Mapping between a topic (represented by T::Hash) and a …\nGet the current events deposited by the runtime.\nExecute a single overweight message.\nExecute an overweight message.\nExecutes a message that could not be executed by …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nExtensions.\nGet the basic externalities for this pallet, useful for …\nCreates an iterator which uses a closure to determine if …\nGets extrinsics count.\n“ Extrinsics data for the current block (maps an …\nGets the index of extrinsic that is currently executing.\nReturns the contents of the “front” slice as returned …\nFilter the call if caller is not root, if false is …\nRemove temporary “environment” entries in storage, …\nReturns first junction, or <code>None</code> if the location is empty.\nReturn the first instruction, if any.\nReturns the first interior junction, or <code>None</code> if the …\nExtra information about this account. The MSB is a flag …\nUtilities for formatting and printing <code>String</code>s.\nFormats the value using the given formatter.\nReturn the state footprint of the given queue.\nExecute a function <code>f</code> on every junction. We use this since …\nNon-reserved part of the balance which the account holder …\nThe ‘free’ balance of a given account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExamples\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTurn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.\nConverts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.\nCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new mutex in an unlocked state ready for use. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>Weight</code> from the same weight for all parts.\nCreates <code>Self</code> from a limit for the maximal consumable …\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate new key pair from the provided <code>seed</code>.\nMake a new key pair from secret seed material. The slice …\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new instance of <code>MultiAssets</code> from a <code>Vec&lt;MultiAsset&gt;</code>…\nCreate a new instance of <code>MultiAssets</code> from a <code>Vec&lt;MultiAsset&gt;</code>…\nCreates a hash type instance from the given string.\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key Pair. …\nProvides a reference to the front element, or <code>None</code> if the …\nProvides a mutable reference to the front element, or <code>None</code> …\nThe amount that <code>free + reserved</code> may not drop below when …\nThe fungibility of the asset, which contains either the …\nPanics\nGenerate new secure (random) key pair.\nGenerate new secure (random) key pair and provide the …\nReturn the current value.\nReturns a copy of the contained value.\nReturns a reference to the value corresponding to the key.\nProvides a reference to the element at the given index.\nReturn a reference to an item at a specific index or <code>None</code> …\nReturns the key-value pair corresponding to the supplied …\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nReturns a mutable reference to the value corresponding to …\nProvides a mutable reference to the element at the given …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nExtract the network ID treating this value as a universal …\nCreates a new <code>MultiLocation</code> which evaluates to the grand …\nPanics\nHandle some incoming DMP messages (note these are …\nHandle some incoming XCMP messages (note these are the big …\nReturns the hash of this head data.\nCompute the blake2-256 hash of the persisted validation …\nReturns a reference to the map’s <code>BuildHasher</code>.\nCreates a new <code>MultiLocation</code> with 0 parents and a <code>Here</code> …\nHRMP messages grouped by channels. The messages in the …\n“ The parachain host configuration that was obtained …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nIncrement a particular account’s nonce by 1.\nIncrement the reference counter on an account.\nIncrement the reference counter on an account, ignoring …\nIncrement the provider reference counter on an account.\nIncrement the reference counter on an account.\nIncrement the self-sufficient reference counter on an …\nReturns a reference to the value corresponding to the …\nStart the execution of a particular block.\nReturn a reference to the inner vec.\nReturn a reference to the inner value.\nReturn a mutable reference to the inner value.\nInserts a key-value pair into the map.\nInserts an element at <code>index</code> within the deque, shifting all …\nCheck all compile-time assumptions about <code>crate::Config</code>.\nCheck the integrity of this pallet’s configuration.\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this …\nReturn a mutable reference to the interior field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume <code>self</code> and return the caller.\nEncode as a compact proof with default trie layout.\nConvert <code>self</code> into a <code>MultiLocation</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>MultiLocation</code> containing <code>n</code> parents.\nConsumes the <code>RefCell</code>, returning the wrapped value.\nConsumes this mutex, returning the underlying data.\nConsume <code>self</code> and return the inner vec.\nConsume and return the inner value.\nCreates a consuming iterator, that is, one that moves each …\nConsumes the deque into a front-to-back iterator yielding …\nConsume and return an iterator over the items.\nConvert into an iterator over encoded trie nodes in …\nCreates a consuming iterator visiting all the keys in …\nConvert <code>self</code> into a <code>MultiLocation</code> containing 0 parents.\nConvert <code>self</code> into a <code>MultiLocation</code> containing 0 parents.\nCreates a <code>MemoryDB</code> from <code>Self</code>.\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nConvert into plain node vector.\nReturn the only instruction, contained in <code>Self</code>, iff only …\nExtract the signer from the message if it is a <code>Signed</code> …\nCreates a consuming iterator visiting all the values in …\nConvert <code>self</code> into a <code>VersionedMultiLocation</code> containing 0 …\nConsume <code>self</code> and return the equivalent …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nTreating <code>self</code> as the universal context, return the …\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the map contains no elements.\nReturns whether this is an empty proof.\nReturns <code>true</code> if the deque is empty.\nReturn <code>true</code> if no instructions are held in <code>self</code>.\nWhether the <code>MultiLocation</code> has no parents and has a <code>Here</code> …\nReturns <code>true</code> if the part represents a strict majority (&gt; …\nReturns <code>true</code> if this definitely represents no asset.\nDetermines whether the mutex is poisoned.\nTrue if the account has some outstanding consumer …\nReturns <code>true</code> if no bits are set.\nIncrease the total issuance by <code>amount</code> and return the …\nAn iterator visiting all key-value pairs in arbitrary …\nReturns a front-to-back iterator.\nReturns a reference iterator over the junctions.\nReturn an iterator over references to the items.\nAn iterator visiting all key-value pairs in arbitrary …\nReturns a front-to-back iterator that returns mutable …\nReturn an iterator over mutable references to the items.\nCreate an iterator over encoded trie nodes in …\nAn iterator visiting all keys in arbitrary order. The …\nKill all storage items with a key that starts with the …\nKill some items from storage.\nReturns last junction, or <code>None</code> if the location is empty.\nReturns last junction, or <code>None</code> if the location is empty or …\nReturn the last instruction, if any.\nPanics\nReturns the number of elements in the map.\nReturns the number of elements in the deque.\nReturns the number of junctions in <code>self</code>.\nReturn the number of distinct asset instances contained.\nReturns the number of parents and junctions in <code>self</code>.\nReturn the number of instructions held in <code>self</code>.\nReturns the size of this hash in bytes.\nThe limit can ever be accrued.\nExplicit limit on number of assets allowed to match, if …\nExplicit limit placed on the number of items, if any.\nAcquires a mutex, blocking the current thread until it is …\nPanics\nRearranges the internal storage of this deque so it is one …\nEnsure an account’s free balance equals some value; this …\nEnsures that self begins with <code>prefix</code> and that it has a …\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nReturns true if the wild element of <code>self</code> matches <code>inner</code>.\nReturns true if <code>inner</code> would be matched by <code>self</code>.\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nThe maximum code size permitted, in bytes.\nThe max length of the final hash, for the given key type.\nCreates <code>Self</code> with the maximal possible limit for the …\nThe maximum legal size of a POV block, in bytes.\nReturns the largest finite number this type can represent\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nMerges multiple storage proofs covering potentially …\nThe identity of the XCM; this may be a hash of its …\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nReturns the smallest finite number this type can represent\nThe minimum balance any single account may have. This is …\nConstant version of Mul with u64.\nCreates a new <code>Test</code> instance\nCreate an <code>Id</code>.\nCreates an empty <code>HashMap</code>.\nConstructs a storage proof from a subset of encoded trie …\nCreate a new instance from its raw inner byte value.\nCreates an empty deque.\nCreates a new <code>RefCell</code> containing <code>value</code>.\nCreates a new condition variable which is ready to be …\nCreates a new mutex in an unlocked state ready for use.\nA new (empty) value.\nCreates a new <code>MultiLocation</code> with the given number of …\nCreate an empty instance.\nCreates an empty deque.\n“ In case of a scheduled upgrade, this storage field …\nThe number of transactions this account has sent.\nCreate with system none origin and …\nTo be called immediately after an extrinsic has been …\nNote what the extrinsic data of the current extrinsic …\nTo be called immediately after <code>note_applied_extrinsic</code> of …\nTo be called immediately after finishing the …\nWakes up all blocked threads on this condvar.\nWakes up one blocked thread on this condvar.\nImplementing this function on a pallet allows you to …\nAn account is being created.\nBlock finalization hook. This is called at the very end of …\nHook to consume a block’s idle time. This will run when …\nBlock initialization hook. This is called at the very …\nHook executed when a code change (aka. a “runtime upgrade…\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConsume and either return <code>self</code> if it contains some …\nThe current value of the Origin register of the <code>XCVM</code>.\nProduce a pair of imbalances that cancel each other out …\nThe para id of the current parachain.\nCreates a new <code>MultiLocation</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\n“ Hash of the previous block.“\nThe parent head-data.\nThe number of parent junctions at the beginning of this …\nPanics\nReturns the index of the partition point according to the …\nRemoves the last element from the deque and returns it, or …\nRemoves the first element and returns it, or <code>None</code> if the …\nPrepend a <code>MultiLocation</code> to a concrete asset, giving it a …\nPrepend a <code>MultiLocation</code> to a concrete asset, giving it a …\nPrepend a <code>MultiLocation</code> to any concrete asset items, …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nConsume <code>self</code> and return its value prefixed with <code>prefix</code>.\nProcess the given message, using no more than the …\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nProvides type based access to context intended for error …\nThe number of outstanding provider references for the …\nThe number of other modules that allow this account to …\nGet the public key.\nMutates <code>self</code> to be appended with <code>new</code> or returns an <code>Err</code> …\nAdd some asset onto the list, saturating. This is quite a …\nAppends an element to the back of the deque.\nPrepends an element to the deque.\nMutates <code>self</code> to be prepended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Junctions</code> prefixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>MultiLocation</code> prefixed with <code>new</code>…\nConsumes <code>self</code> and returns a <code>Junctions</code> suffixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>MultiLocation</code> suffixed with <code>new</code>…\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content …\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value using the …\nCreates an iterator that covers the specified range in the …\nCreates an iterator that covers the specified mutable …\nCreates a raw immutable entry builder for the HashMap.\nCreates a raw entry builder for the HashMap.\nIncrease the active issuance by some amount, up to the …\nFill <code>buf</code> with the contents of the “front” slice as …\nGet the current events deposited by the runtime.\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate the location of the asset identifier if concrete, …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate <code>self</code> so that it represents the same location from …\nMutate the location of the asset identifier if concrete, …\nConsume <code>self</code> and return a new value representing the same …\nRemove a page which has no more messages remaining to be …\nReturn the reference time part of the weight.\nReturn a mutable reference to the reference time part of …\nThe number of outstanding provider and sufficient …\nThe number of outstanding references for the account <code>who</code>.\nInform the system pallet of some additional weight that …\nConsumes <code>self</code> and returns how <code>viewer</code> would address it …\nA storage proof of a predefined set of keys from the …\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\n“ The state proof for the last relay parent block.“ “…\n“ The snapshot of some state related to messaging …\nThe remaining weight that can still be consumed.\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nRemoves a key from the map, returning the value at the key …\nRemoves and returns the element at <code>index</code> from the deque. …\nRemoves a key from the map, returning the stored key and …\nRemove the <code>NetworkId</code> value.\nRemove the <code>NetworkId</code> value in any <code>Junction</code>s.\nRemove the <code>NetworkId</code> value in any interior <code>Junction</code>s.\nReturns a new fixed hash where all bits are set to the …\nReplaces the contained value, returning the old value.\nReplaces the contained value, returning the old value.\nReplaces the wrapped value with a new one, returning the …\nReplaces the wrapped value with a new one computed from <code>f</code>, …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves the minimum capacity for at least <code>additional</code> more …\nBalance which is has active holds on it and may not be …\nReset events.\nReset origin filters to default one, i.e …\nModifies the deque in-place so that <code>len()</code> is equal to …\nModifies the deque in-place so that <code>len()</code> is equal to …\nSimilar to deposit_creating, only accepts a …\nSimilar to deposit_creating, only accepts a …\nResumes all XCM executions for the XCMP queue.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nCreate with system root origin and …\nRotates the double-ended queue <code>n</code> places to the left.\nRotates the double-ended queue <code>n</code> places to the right.\nReturn the chain’s current runtime version.\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nThe implementation of the runtime upgrade functionality …\nConvenience function for using a <code>SendXcm</code> implementation. …\nServices a single overweight XCM.\nService all message queues in some fair manner.\nSets or initializes the contained value.\nSets or initializes the contained value.\nStores an assertion in a particular Chain\nSet the current block weight. This should only be used in …\nSet the block number to something in particular. Can be …\nReplace the caller with caller from the other origin\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet a custom head data that should be returned as result …\nStores an assertion in a particular Chain\nSets the index of extrinsic that is currently executing.\nSet the number of pages in the WebAssembly environment’s …\nSet the parent hash number to something in particular. Can …\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nSet some items of storage.\nSet the current validation data.\nSimilar to withdraw, only accepts a <code>PositiveImbalance</code> and …\nShrinks the capacity of the map with a lower limit. It …\nShrinks the capacity of the deque with a lower bound.\nShrinks the capacity of the map as much as possible. It …\nShrinks the capacity of the deque as much as possible.\nSign a message.\nCreate with system signed origin and …\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nIf possible give a hint of expected size of the encoding.\nAttempt to skip the encoded value from input.\nDeducts up to <code>value</code> from the combined balance of <code>who</code>, …\nThe lower-level source of this error, if any.\nReturns an iterator starting with the current error and …\nSplits off the first junction, returning the remaining …\nSplits off the first interior junction, returning the …\nExtract the network ID and the interior consensus …\nSplits off the last junction, returning the remaining …\nSplits off the last interior junction, returning the …\nSplits the deque into two at the given index.\nSimple sr25519 (Schnorr-Ristretto) API.\nState version to use during tests.\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nThe number of outstanding sufficient references for the …\nThe number of modules that allow this account to exist for …\nSuspends all XCM executions for the XCMP queue, regardless …\nSwaps elements at indices <code>i</code> and <code>j</code>.\nSwaps the wrapped value of <code>self</code> with the wrapped value of …\nRemoves an element from anywhere in the deque and returns …\nRemoves an element from anywhere in the deque and returns …\nAny remaining unprocessed messages should happen only …\nTakes the contained value, leaving <code>Default::default()</code> in …\nTakes the contained value, leaving <code>Default::default()</code> in …\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nRemoves the first element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the last element from <code>interior</code>, returning it (or …\nEncode as a compact proof with default trie layout.\nReturns the inner bytes array.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nCreates a <code>MemoryDB</code> from <code>Self</code> reference.\nReturn a vec filled with raw data.\nTop trie storage data.\nThe current value of the Topic register of the <code>XCVM</code>.\nThe total balance in this account including any that is …\nThe combined balance of <code>who</code>.\nThe total amount of issuance in the system.\nTransfer some liquid free balance to another staker.\nShortens the deque, keeping the first <code>len</code> elements and …\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nImmutably borrows the wrapped value, returning an error if …\nMutably borrows the wrapped value, returning an error if …\nImmutably borrows the wrapped value, returning an error if …\nConsume the given weight after checking that it can be …\nTries to insert a key-value pair into the map, and returns …\nAttempts to acquire this lock.\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve the minimum capacity for at least …\nAcquires a reference to the value in this TLS key.\nDo something with the caller, consuming self but returning …\nCreates an empty deque with space for at least <code>capacity</code> …\nReturns the name of a type as a string slice.\nUndo the effect of leaked guards on the borrow state of …\nGet the unincluded segment size after the given hash.\nWrite code to the storage and emit related events and …\nOverwrites the number of pages of messages which must be …\nOverwrites the number of pages of messages which the queue …\nOverwrites the number of pages of messages which must be …\nOverwrites the amount of remaining weight under which we …\nOverwrites the speed to which the available weight …\nOverwrite the maximum amount of weight any individual …\nReturns a mutable reference to HRMP channel metadata for a …\nReturns a mutable reference to HRMP channel metadata for a …\nConvert self to a slice and then invoke the given closure …\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\n“ The <code>PersistedValidationData</code> set for this block.“ “ …\nAn iterator visiting all values in arbitrary order. The …\nAn iterator visiting all values mutably in arbitrary order.\nVerify a signature on a message. Returns true if the …\nBlocks the current thread until this condition variable …\nWaits on this condition variable for a notification, …\nWaits on this condition variable for a notification, …\nWaits on this condition variable for a notification, …\nBlocks the current thread until this condition variable …\nHow much weight was used by the XCM execution attempt.\nAcquires a reference to the value in this TLS key.\nAcquires a reference to the contained value.\nAcquires a mutable reference to the contained value.\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nCreates an empty <code>HashMap</code> which will use the given hash …\nConstructor which sets the message ID to the supplied …\nConstructor which sets the message ID to the supplied …\nRemoves some free balance from <code>who</code> account for <code>reason</code> if …\nTreat <code>self</code> as a universal location and the context of …\nReturn a <code>Weight</code> where all fields are zero.\nReturns a new zero-initialized fixed hash.\nThe EIP-155 chain ID.\nIf there are pending messages then …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe message being sent exceeds the configured max message …\nInitialization value for the DeliveryFee factor.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAn error returned by [<code>check_processed_downward_messages</code>] …\nAn error sending a downward message.\n<code>processed_downward_messages</code> should not be greater than the …\nInitialization value for the DeliveryFee factor.\nDetermine whether enqueuing a downward message to a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nEnqueue a downward message to a specific recipient para.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nInitialization value for the DeliveryFee factor.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nInitialization value for the DeliveryFee factor.\nPossible alignments returned by <code>Formatter::align</code>\nThis structure represents a safely precompiled version of …\n<code>b</code> formatting.\nIndication that contents should be center-aligned.\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nFormat trait for an empty format, <code>{}</code>.\nContains the error value\nThe error type which is returned from formatting a message …\nConfiguration for formatting.\nImplements <code>fmt::Debug</code> and <code>fmt::Display</code> using a function.\nIndication that contents should be left-aligned.\n<code>e</code> formatting.\n<code>x</code> formatting.\n<code>o</code> formatting.\nContains the success value\n<code>p</code> formatting.\nThe type returned by formatter methods.\nIndication that contents should be right-aligned.\n<code>E</code> formatting.\n<code>X</code> formatting.\nA trait for writing or formatting into Unicode-accepting …\nFlag indicating what form of alignment was requested.\nDetermines if the <code>#</code> flag was specified.\nGet the formatted string, if it has no arguments to be …\nCreates a <code>DebugList</code> builder designed to assist with …\nCreates a <code>DebugMap</code> builder designed to assist with …\nCreates a <code>DebugSet</code> builder designed to assist with …\nCreates a <code>DebugStruct</code> builder designed to assist with …\nCreates a <code>DebugTuple</code> builder designed to assist with …\nAdds the contents of an iterator of entries to the set …\nAdds the contents of an iterator of entries to the list …\nAdds the contents of an iterator of entries to the map …\nAdds a new entry to the set output.\nAdds a new entry to the list output.\nAdds a new entry to the map output.\nAdds a new entry to the set output.\nAdds a new entry to the list output.\nAdds a new field to the generated struct output.\nAdds a new field to the generated tuple struct output.\nAdds a new field to the generated struct output.\nAdds a new field to the generated tuple struct output.\nCharacter used as ‘fill’ whenever there is alignment.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nMarks the struct as non-exhaustive, indicating to the …\nFlags for formatting\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nThe <code>format</code> function takes an <code>Arguments</code> struct and returns …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds the key part of a new entry to the map output.\nAdds the key part of a new entry to the map output.\nThis function takes a string slice and emits it to the …\nPerforms the correct padding for an integer which has …\nOptionally specified precision for numeric types. …\nDetermines if the <code>0</code> flag was specified.\nDetermines if the <code>-</code> flag was specified.\nDetermines if the <code>+</code> flag was specified.\nAdds the value part of a new entry to the map output.\nAdds the value part of a new entry to the map output.\nOptionally specified integer width that the output should …\nThe <code>write</code> function takes an output stream, and an <code>Arguments</code>…\nWrites a <code>char</code> into this writer, returning whether the …\nGlue for usage of the <code>write!</code> macro with implementors of …\nWrites some formatted information into this instance.\nWrites a string slice into this writer, returning whether …\nWrites some data to the underlying buffer contained within …\nHelper function to generate an account ID from seed.\nAn abstract location; this is a name which may mean …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nClassification of an asset being concrete or abstract.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nA specific location identifying an asset.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than than the given proportion of members of the body.\nEither an amount of a single fungible asset, or a single …\n<code>MultiAsset</code> collection, defined either by a number of …\nA <code>Vec</code> of <code>MultiAsset</code>s.\nA relative path between state-bearing consensus systems.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA tuple struct which can be converted into a <code>MultiLocation</code> …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nAlways throws an error of type <code>Trap</code>.\nUsed by the <code>Trap</code> instruction to force an error …\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildMultiAsset</code> wildcard.\nClassification of whether an asset is fungible or not.\nA wildcard representing a set of assets.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe interior (i.e. non-parent) junctions that this …\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.\nAn identifier used to match public keys against sr25519 …\nAn Schnorrkel/Ristretto x25519 (“sr25519”) key pair.\nAn Schnorrkel/Ristretto x25519 (“sr25519”) public key.\nAn Schnorrkel/Ristretto x25519 (“sr25519”) signature.\nReturn a slice filled with raw data.\nDerive a child key from a series of given junctions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA new instance from an H256.\nA new instance from an H512.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nA new instance from the given 32-byte <code>data</code>.\nA new instance from the given 64-byte <code>data</code>.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nMake a new key pair from raw secret seed material.\nA new instance from the given slice that should be 64 …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate output bytes from the given VRF configuration.\nGenerate output bytes from the given VRF configuration.\nGet the public key.\nVerify a signature on a message. Returns <code>true</code> if the …\nSchnorrkel VRF related types and operations.\nVRF input.\nVRF output type suitable for schnorrkel operations.\nVRF proof type suitable for schnorrkel operations.\nVRF input ready to be used for VRF sign and verify …\nVRF signature data\nTranscript ready to be used for VRF related operations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap transcript to <code>VrfSignData</code>.\nGenerate output bytes from the given VRF configuration.\nBuild a new transcript instance.\nBuild a new instance ready to be used for VRF signer and …\nVRF output.\nVRF proof.\nAdd some extra data to be signed.")