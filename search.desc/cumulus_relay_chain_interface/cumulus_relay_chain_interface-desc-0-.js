searchState.loadedDescShard("cumulus_relay_chain_interface", 0, "A candidate-receipt with commitments directly included.\nContains the error value\nThe core was not occupied to begin with.\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nThe candidate occupying the core was made available and …\nAn assumption being made about the state of an occupied …\nContains the success value\nA handle used to communicate with the <code>Overseer</code>.\nA hash of some data used by the relay chain.\nHeader type.\nUnique identifier of a parachain.\nThe validation data provides information about how to …\nTrait that provides all necessary methods for interaction …\nSimple index type with which we can count sessions.\nStorage value.\nThe candidate occupying the core timed out and freed the …\nIdentity that parachain validators use when signing …\nGet the hash of the current best block.\nInform the <code>Overseer</code> that some block was finalized.\nInform the <code>Overseer</code> that that some block was imported.\nGet the receipt of a candidate pending availability. This …\nThe commitments of the candidate receipt.\nDoes this committed candidate receipt corresponds to the …\nThe message payload.\nGet a reference to the candidate descriptor.\nThe descriptor of the candidate.\nA chain-specific digest of data useful for light clients …\nThe merkle root of the extrinsics.\nGet a stream of finality notifications.\nGet the hash of the finalized block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFetch a storage item by key.\nComputes the hash of the committed candidate receipt.\nCompute the blake2-256 hash of the persisted validation …\nFetch the block header of a given hash or height, if it …\nGet a stream of import block notifications.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the synchronization service is undergoing major …\nThe maximum legal size of a POV block, in bytes.\nThe actual downward message to processes.\nCreate a new <code>Handle</code>.\nCreate an <code>Id</code>.\nGet a stream of new best block notifications.\nThe block number.\nGet a handle to the overseer.\nThe parent hash.\nThe parent head-data.\nYields the persisted validation data for the given <code>ParaId</code> …\nGenerate a storage read proof.\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\nReturns channels contents for each inbound HRMP channel …\nReturns the whole contents of the downward message queue …\nSend some message to one of the <code>Subsystem</code>s.\nSend a message not providing an origin.\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nReturns the session index expected at a child of the block.\nThe state trie merkle root\nTell <code>Overseer</code> to shutdown.\nTransforms this into a plain <code>CandidateReceipt</code>.\nFetch a vector of current validators.\nWait for a block with the given hash to be in the …\nWait for a block with a given hash in the relay chain.")