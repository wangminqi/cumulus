searchState.loadedDescShard("pallet_collator_selection", 0, "Collator Selection pallet.\nA module that is responsible for migration of storage for …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nVersion 1 Migration This migration ensures that any …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAccount is already a candidate.\nAccount is already an Invulnerable.\nContains a variant per dispatchable extrinsic that this …\nFixed amount to deposit to become a collator.\nA new candidate joined.\nBasic information about a collation candidate.\nA candidate was removed.\nThe (community, limited) collation candidates. <code>Candidates</code> …\nConfiguration trait of this pallet.\nThe currency mechanism.\nDesired number of candidates.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nA convertor from collators id. Since this pallet does not …\nAn account was unable to be added to the Invulnerables …\nA new Invulnerable was added.\nAn Invulnerable was removed.\nThe invulnerable, permissioned collators. This list must …\nLast block authored by collator.\nMaximum number of candidates that we should have.\nMaximum number of invulnerables.\nMinimum number eligible collators. Should always be …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe candidacy bond was set.\nThe number of desired candidates was set.\nNew Invulnerables were set.\nAccount has no associated validator ID.\nAccount is not a candidate.\nAccount is not an Invulnerable.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAccount Identifier from which the internal Pot is …\nOverarching event type.\nLeaving would result in too few candidates.\nThe pallet has too many candidates.\nThere are too many Invulnerables.\nOrigin that can dictate updating parameters of this pallet.\nA stable ID for a validator.\nA conversion from account ID to validator ID.\nValidator ID is not yet registered.\nValidate a user is registered\nThe weight information of this pallet.\nGet a unique, inaccessible account ID from the <code>PotId</code>.\nAdd a new account <code>who</code> to the list of <code>Invulnerables</code> …\nSee <code>Pallet::add_invulnerable</code>.\nAssemble the current set of candidates and invulnerables …\nAn auto-generated getter for <code>CandidacyBond</code>.\nAn auto-generated getter for <code>Candidates</code>.\nReserved deposit.\nAn auto-generated getter for <code>DesiredCandidates</code>.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn auto-generated getter for <code>Invulnerables</code>.\nKicks out candidates that did not produce a block in the …\nAn auto-generated getter for <code>LastAuthoredBlock</code>.\nDeregister <code>origin</code> as a collator candidate. Note that the …\nSee <code>Pallet::leave_intent</code>.\nCreate a call with the variant <code>add_invulnerable</code>.\nCreate a call with the variant <code>leave_intent</code>.\nCreate a call with the variant <code>register_as_candidate</code>.\nCreate a call with the variant <code>remove_invulnerable</code>.\nCreate a call with the variant <code>set_candidacy_bond</code>.\nCreate a call with the variant <code>set_desired_candidates</code>.\nCreate a call with the variant <code>set_invulnerables</code>.\nRegister this account as a collator candidate. The account …\nSee <code>Pallet::register_as_candidate</code>.\nRemove an account <code>who</code> from the list of <code>Invulnerables</code> …\nSee <code>Pallet::remove_invulnerable</code>.\nSet the candidacy bond amount.\nSee <code>Pallet::set_candidacy_bond</code>.\nSet the ideal number of non-invulnerable collators. If …\nSee <code>Pallet::set_desired_candidates</code>.\nSet the list of invulnerable (fixed) collators. These …\nSee <code>Pallet::set_invulnerables</code>.\nAuto-generated docs-only module listing all (public and …\nAccount identifier.\nAdd a new account <code>who</code> to the list of <code>Invulnerables</code> …\nDeregister <code>origin</code> as a collator candidate. Note that the …\nRegister this account as a collator candidate. The account …\nRemove an account <code>who</code> from the list of <code>Invulnerables</code> …\nSet the candidacy bond amount.\nSet the ideal number of non-invulnerable collators. If …\nSet the list of invulnerable (fixed) collators. These …\nFixed amount to deposit to become a collator.\nThe (community, limited) collation candidates. <code>Candidates</code> …\nDesired number of candidates.\nThe invulnerable, permissioned collators. This list must …\nLast block authored by collator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for pallet_collator_selection using the Substrate …\nStorage: Session NextKeys (r:1 w:0) Proof Skipped: Session …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: CollatorSelection Invulnerables (r:1 w:1) Proof: …")