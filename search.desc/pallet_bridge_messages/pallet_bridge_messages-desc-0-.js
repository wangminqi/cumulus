searchState.loadedDescShard("pallet_bridge_messages", 0, "Runtime module that allows sending and receiving messages …\nSize of the message being delivered in benchmarks.\nNumber of extra bytes (excluding size of storage value …\nThe target that will be used when publishing logs related …\nInbound lane data wrapper that implements <code>MaxEncodedLen</code>.\nOutbound message data wrapper that implements <code>MaxEncodedLen</code>…\nExtended weight info.\nEnsure that we’re able to receive maximal confirmation …\nEnsure that we’re able to receive maximal (by-size and …\nEnsure that weights from <code>WeightInfoExt</code> implementation are …\nSize of proof that is already included in the single …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns dispatch weight of message of given size.\nReturns dispatch weight of message of given size.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReturns weight that needs to be accounted when receiving …\nReturns weight that needs to be accounted when receiving …\nReturns weight overhead of delivery confirmation …\nReturns weight overhead of delivery confirmation …\nExtra weight that is added to the …\nReturns weight that needs to be accounted when receiving …\nReturns weight that needs to be accounted when receiving …\nWeight of confirmation delivery extrinsic.\nWeight of confirmation delivery extrinsic.\nReturns weight that needs to be accounted when receiving …\nReturns weight that needs to be accounted when receiving …\nReturns weight that needs to be accounted when message …\nReturns weight that needs to be accounted when message …\nReturns weight overhead of message delivery transaction (…\nReturns weight overhead of message delivery transaction (…\nExtra weight that is added to the <code>receive_messages_proof</code> …\nWeight of message delivery extrinsic.\nWeight of message delivery extrinsic.\nReturns weight that needs to be accounted when storage …\nReturns weight that needs to be accounted when storage …\nAutogenerated weights for RialtoMessages\nGet all active outbound lanes that the message pallet is …\nError generated by the <code>OwnedBridgeModule</code> trait.\nGets the chain id value from the instance.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nDelivery confirmation payments.\nDelivery payments.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nSubmitter has failed to pay fee for delivering and …\nCan be used to configure the genesis state of this pallet.\nThe outbound lane is inactive.\nMap of lane id =&gt; inbound lane data.\nPayload type of inbound messages. This payload is …\nIdentifier of relayer that deliver messages to this chain. …\n<code>Instance1</code> to be used for instantiable palllets defined …\nThe cumulative dispatch weight, passed by relayer is not …\nInvalid messages delivery proof has been submitted.\nInvalid messages has been submitted.\nThe relayer has declared invalid unrewarded relayers state …\nMessage payload verifier.\nMaximal number of unconfirmed messages at inbound lane. …\nMaximal number of unrewarded relayer entries at inbound …\nMaximal encoded size of the outbound payload.\nGet-parameter that returns number of active outbound lanes …\nMessage has been accepted and is waiting to be delivered.\nMessage dispatch.\nThe inbound message dispatcher is inactive.\nThe message someone is trying to work with (i.e. increase …\nMessage has been treated as invalid by chain verifier.\nMessage has been treated as invalid by lane verifier.\nMessage has been treated as invalid by the pallet logic.\nMessages in the inclusive range have been delivered to the …\nShortcut to messages delivery proof type for Config.\nShortcut to messages proof type for Config.\nMessages have been received from the bridged chain.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nPallet is not in Normal operating mode.\nDelivery confirmation callback.\nMap of lane id =&gt; outbound lane data.\nMap of lane id =&gt; is congested signal sent. It is managed …\nAll queued outbound messages.\nPayload type of outbound messages. This payload is …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe current operating mode of the pallet.\nOptional pallet owner.\nError confirming messages receival.\nThe overarching event type.\nSource header chain, as it is represented on target chain.\nTarget header chain.\nThe transaction brings too many messages.\nBenchmarks results from runtime we’re plugged into.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn inbound lane data.\nPrepare data, related to given inbound message.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn auto-generated getter for <code>PalletOwner</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>receive_messages_proof</code>.\nCreate a call with the variant <code>set_operating_mode</code>.\nCreate a call with the variant <code>set_owner</code>.\nAn auto-generated getter for <code>PalletOperatingMode</code>.\nInitial pallet operating mode.\nReturn outbound lane data.\nGet stored data of the outbound message with given nonce.\nInitial pallet owner.\nDummy marker.\nReceive messages delivery proof from bridged chain.\nSee <code>Pallet::receive_messages_delivery_proof</code>.\nReceive messages proof from bridged chain.\nSee <code>Pallet::receive_messages_proof</code>.\nHalt or resume all/some pallet operations.\nSee <code>Pallet::set_operating_mode</code>.\nChange <code>PalletOwner</code>.\nSee <code>Pallet::set_owner</code>.\nAuto-generated docs-only module listing all (public and …\nReceive messages delivery proof from bridged chain.\nReceive messages proof from bridged chain.\nHalt or resume all/some pallet operations.\nChange <code>PalletOwner</code>.\nMap of lane id =&gt; inbound lane data.\nMap of lane id =&gt; outbound lane data.\nMap of lane id =&gt; is congested signal sent. It is managed …\nAll queued outbound messages.\nThe current operating mode of the pallet.\nOptional pallet owner.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>RialtoMessages</code> that are generated using one of …\nWeight functions needed for RialtoMessages.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)")